preservedocbooktags = false

;; used to highlight the {@source} inline tag, @filesource tag, and @example tag
[highlightSourceTokens]
;; format:
;; T_CONSTANTNAME = open
;; /T_CONSTANTNAME = close

T_INCLUDE = <span class="src-inc">
/T_INCLUDE = </span>
T_INCLUDE_ONCE = <span class="src-inc">
/T_INCLUDE_ONCE = </span>
T_REQUIRE_ONCE = <span class="src-inc">
/T_REQUIRE_ONCE = </span>
T_REQUIRE_ONCE = <span class="src-inc">
/T_REQUIRE_ONCE = </span>

T_CONSTANT_ENCAPSED_STRING = <span class="src-str">
/T_CONSTANT_ENCAPSED_STRING = </span>
T_STRING_VARNAME = <span class="src-str">
/T_STRING_VARNAME = </span>

T_STRING = <span class="src-id">
/T_STRING = </span>

T_DNUMBER = <span class="src-num">
/T_DNUMBER = </span>
T_LNUMBER = <span class="src-num">
/T_LNUMBER = </span>

T_VARIABLE = <span class="src-var">
/T_VARIABLE = </span>

T_COMMENT = <span class="src-comm">
/T_COMMENT = </span>
T_ML_COMMENT = <span class="src-comm">
/T_ML_COMMENT = </span>

T_OBJECT_OPERATOR = <span class="src-sym">
/T_OBJECT_OPERATOR = </span>

T_ABSTRACT = <span class="src-key">
/T_ABSTRACT = </span>
T_CLONE = <span class="src-key">
/T_CLONE = </span>
T_HALT_COMPILER = <span class="src-key">
/T_HALT_COMPILER = </span>
T_ARRAY = <span class="src-key">
/T_ARRAY = </span>
T_AS = <span class="src-key">
/T_AS = </span>
T_BREAK = <span class="src-key">
/T_BREAK = </span>
T_CLASS = <span class="src-key">
/T_CLASS = </span>
T_CASE = <span class="src-key">
/T_CASE = </span>
T_CONST = <span class="src-key">
/T_CONST = </span>
T_CONTINUE = <span class="src-key">
/T_CONTINUE = </span>
T_DECLARE = <span class="src-key">
/T_DECLARE = </span>
T_DEFAULT = <span class="src-key">
/T_DEFAULT = </span>
T_ELSE = <span class="src-key">
/T_ELSE = </span>
T_ELSEIF = <span class="src-key">
/T_ELSEIF = </span>
T_EMPTY = <span class="src-key">
/T_EMPTY = </span>
T_ENDDECLARE = <span class="src-key">
/T_ENDDECLARE = </span>
T_ENDFOR = <span class="src-key">
/T_ENDFOR = </span>
T_ENDSWITCH = <span class="src-key">
/T_ENDSWITCH = </span>
T_ENDFOREACH = <span class="src-key">
/T_ENDFOREACH = </span>
T_ENDIF = <span class="src-key">
/T_ENDIF = </span>
T_ENDWHILE = <span class="src-key">
/T_ENDWHILE = </span>
T_EXIT = <span class="src-key">
/T_EXIT = </span>
T_EXTENDS = <span class="src-key">
/T_EXTENDS = </span>
T_FINAL = <span class="src-key">
/T_FINAL = </span>
T_FOR = <span class="src-key">
/T_FOR = </span>
T_FOREACH = <span class="src-key">
/T_FOREACH = </span>
T_FUNCTION = <span class="src-key">
/T_FUNCTION = </span>
T_GLOBAL = <span class="src-key">
/T_GLOBAL = </span>
T_IF = <span class="src-key">
/T_IF = </span>
T_IMPLEMENTS = <span class="src-key">
/T_IMPLEMENTS = </span>
T_INTERFACE = <span class="src-key">
/T_INTERFACE = </span>
T_LOGICAL_AND = <span class="src-key">
/T_LOGICAL_AND = </span>
T_LOGICAL_OR = <span class="src-key">
/T_LOGICAL_OR = </span>
T_LOGICAL_XOR = <span class="src-key">
/T_LOGICAL_XOR = </span>
T_NEW = <span class="src-key">
/T_NEW = </span>
T_PRIVATE = <span class="src-key">
/T_PRIVATE = </span>
T_PROTECTED = <span class="src-key">
/T_PROTECTED = </span>
T_PUBLIC = <span class="src-key">
/T_PUBLIC = </span>
T_RETURN = <span class="src-key">
/T_RETURN = </span>
T_STATIC = <span class="src-key">
/T_STATIC = </span>
T_SWITCH = <span class="src-key">
/T_SWITCH = </span>
T_VAR = <span class="src-key">
/T_VAR = </span>
T_WHILE = <span class="src-key">
/T_WHILE = </span>

T_DOUBLE_COLON = <span class="src-sym">
/T_DOUBLE_COLON = </span>

T_OPEN_TAG = <span class="src-php">
/T_OPEN_TAG = </span>
T_OPEN_TAG_WITH_ECHO = <span class="src-php">
/T_OPEN_TAG_WITH_ECHO = </span>
T_CLOSE_TAG = <span class="src-php">
/T_CLOSE_TAG = </span>


[highlightSource]
;; this is for highlighting things that aren't tokens like "&"
;; format:
;; word = open
;; /word = close
@ = <span class="src-sym">
/@ = </span>
& = <span class="src-sym">
/& = </span>
[ = <span class="src-sym">
/[ = </span>
] = <span class="src-sym">
/] = </span>
! = <span class="src-sym">
/! = </span>
";" = <span class="src-sym">
/; = </span>
( = <span class="src-sym">
/( = </span>
) = <span class="src-sym">
/) = </span>
, = <span class="src-sym">
/, = </span>
{ = <span class="src-sym">
/{ = </span>
} = <span class="src-sym">
/} = </span>
""" = <span class="src-str">
/" = </span>

[highlightDocBlockSourceTokens]
;; this is for docblock tokens, highlighted by phpDocumentor_HighlightParser
;; tagphptype is for "string" in @param string description, for example
docblock = <span class="src-doc">
/docblock = </span>
tagphptype = <span class="src-doc-type">
/tagphptype = </span>
tagvarname = <span class="src-doc-var">
/tagvarname = </span>
coretag = <span class="src-doc-coretag">
/coretag = </span>
tag = <span class="src-doc-tag">
/tag = </span>
inlinetag = <span class="src-doc-inlinetag">
/inlinetag = </span>
internal = <span class="src-doc-internal">
/internal = </span>
closetemplate = <span class="src-doc-close-template">
/closetemplate = </span>
docblocktemplate = <span class="src-doc-template">
/docblocktemplate = </span>

[highlightTutorialSourceTokens]
;; this is for XML DocBook-based tutorials, highlighted by phpDocumentor_TutorialHighlightParser
;; <tag>
opentag = <span class="tute-tag">
/opentag = </span>
;; </tag>
closetag = <span class="tute-tag">
/closetag = </span>
;; <tag attribute="value">
attribute = <span class="tute-attribute-name">
/attribute = </span>
;; <tag attribute="value">
attributevalue = <span class="tute-attribute-value">
/attributevalue = </span>
;; &entity;
entity = <span class="tute-entity">
/entity = </span>
;; <!-- comment -->
comment = <span class="tute-comment">
/comment = </span>
;; {@inline tag}
itag = <span class="tute-inline-tag">
/itag = </span>

;; used for translation of html in DocBlocks
[desctranslate]
ul = <ul>
/ul = </ul>
ol = <ol>
/ol = </ol>
li = <li>
/li = </li>
code = 
/code = 
var = <var>
/var = </var>
samp = <samp>
/samp = </samp>
kbd = <kbd>
/kbd = </kbd>
pre = <pre>
/pre = </pre>
p = <p>
/p = </p>
b = <strong>
/b = </strong>
i = <em>
/i = </em>
br = <br />

[ppage]
;; this is the DocBook package page translation section.  All DocBook tags
;; that have a corresponding html tag must be listed here.  Entities should
;; also be listed here
;;
;; examples:
;; 1)
;; tagname = newtagname
;;
;; This is the simplest case, where all attributes will be added into the
;; starting tag and the ending tag will be html/xml style </tranlatedtagname>
;; <tagname></tagname> becomes <newtagname></newtagname> and
;; <tagname attr="value"></tagname> becomes
;; <newtagname attr="value"></newtagname>
;;
;; 2)
;; tagname = newtagname
;; tagname->attr = newattrname
;;
;; in this case, everything will be like the first case, except tags like:
;; <tagname attr="value"></tagname> will become
;; <newtagname newattrname="value"></newtagname>
;;
;; 3)
;; tagname = newtagname
;; tagname->attr = newattrname
;; tagname->attr+value = newvalue
;;
;; in this case, the value is also translated to another.  This can be useful
;; for instances such as focus="middle" changing to align="center" or something
;; of that nature.
;; <tagname attr="value"></tagname> will become
;; <newtagname newattrname="newvalue"></newtagname>
;;
;; 4)
;; tagname = newtagname
;; tagname->attr1 = newattrname
;; tagname->attr2 = newattrname
;; tagname->attr1+value|attr2+value = newvalue
;;
;; in this case, two attributes combine to make one new attribute, and the combined
;; value is translated into a new value
;; <tagname attr1="value1" attr2="value2"></tagname> will become
;; <newtagname newattrname="newvalue"></newtagname>
;;
;; 5)
;; tagname = newtagname
;; tagname!attr = dummy
;;
;; here, the attribute will be ignored.  dummy is not used and may be any value
;; <tagname attr="value"></tagname> will become
;; <newtagname></newtagname>
;;
;; 6)
;; tagname = newtagname
;; tagname! = dummy
;;
;; here, all attributes will be ignored.  dummy is not used and may be any value
;; <tagname attr1="value" attr2="foo"></tagname> will become
;; <newtagname></newtagname>
;;
;; 7)
;; tagname = newtagname
;; tagname/ = 1
;;
;; here, the tag will be translated as a single tag with no closing tag, and all
;; attributes
;; <tagname attr="val">{text text}</tagname> will become
;; <newtagname attr="val" />
;;
;; 8)
;; tagname = <starttaginfo />
;; /tagname = closetagtext
;;
;; in this case, the text <starttaginfo> will be inserted exactly as entered for
;; <tagname> and closetagtext for </tagname>
;; <tagname attr="val"></tagname> will become
;; <starttaginfo />closetagtext
;;
;; 9)
;; $attr$my_attribute = newattrname
;;
;; tagname = newtagname
;;
;; in this case, all occurences of my_attribute in any tag will be changed to
;; newattrname.  This is useful for changing things like role="php" to
;; class="php," for example.  Note that the text "$attr$" MUST be on the line
;; start for phpDocumentor to recognize it.
;;
;; 10)
;; &entity; = translation text
;; &quot; = &quot;
;; &quot; = """
;; &lt; = <
;;
;; Use this to control translation of entities to their appropriate values

&nbsp; = &nbsp;
&quot; = &quot;
&rdquo; = &rdquo;
&ldquo; = &ldquo;
&amp; = &amp;
&lt; = &lt;
&gt; = &gt;
&copy; = &copy;

$attr$role = class

abbrev = abbr

blockquote = blockquote

arg = span
arg->choice = class

author = <strong>by <span class="author">
/author = </span></strong>
author! = 0

authorblurb = <div class="author-blurb">
/authorblurb = </div>

authorgroup = <div class="authors"><h2 class="title">Authors</h2>
/authorgroup = </div>
authorgroup! = 0

caution = <span class="warning">
/caution = </span>
caution! = 0

cmdsynopsis = <div class="cmd-synopsis">
/cmdsynopsis = </div>

command = <span class="cmd-title">
/command = </span>

copyright = <div class="notes">
/copyright = </div>

emphasis = strong

example = <div class="src-code">
/example = </div>
example! = 0

function =
/function = ()

formalpara = p

graphic = img
graphic->fileref = src
graphic/ =

important = strong

informalequation = blockquote

informalexample = div

inlineequation = em

itemizedlist = ul

listitem = li

literal = code

literallayout = span

option = " "
/option = 

orderedlist = ol

para = p

programlisting = <div class="src-code">
/programlisting = </div>
programlisting! = 0

refentry = div

refnamediv = <div class="ref-title-box">
/refnamediv = </div>
refnamediv! = 0

refname = <h1 class="ref-title">
/refname = </h1>

refpurpose = <h2 class="ref-purpose">
/refpurpose = </h2>

refsynopsisdiv = <div class="ref-synopsis">
/refsynopsisdiv = </div>
refsynopsisdiv! = 0

refsect1 = span

refsect2 = 
/refsect2 = <hr />

refsect3 = 
/refsect3 = <br />

releaseinfo = <div class="release-info">(
/releaseinfo = )</div>

simpara = 
/simpara = <br />
simpara! = 0

subscript = sub

superscript = super

table = table

table->colsep = rules
table->rowsep = rules
table->colsep+1|rowsep+1 = all
table->colsep+1|rowsep+0 = cols
table->colsep+0|rowsep+1 = rows

table->frame = frame
table->frame+all = border
table->frame+none = void
table->frame+sides = vsides
table->frame+top = above
table->frame+topbot = hsides

thead = thead

tfoot = tfoot

tbody = tbody

colspec = col

tgroup = colgroup
tgroup/ = 1
tgroup->cols = span

row = tr

entry = td
entry->morerows = colspan
entry->morerows+1 = 2
entry->morerows+2 = 3
entry->morerows+3 = 4
entry->morerows+4 = 5
entry->morerows+5 = 6
entry->morerows+6 = 7
entry->morerows+7 = 8
entry->morerows+8 = 9
entry->morerows+9 = 10
entry->morerows+10 = 11
;; add more if you need more colspans

warning = <span class="warning">
/warning = </span>
warning! = 0

;; now begins the attributes that should be tags in cdata
[$attr$id]
open = a
;close = /a
cdata! = true
quotevalues = true
separator = "="
;separateall = true
$id = name

;; now begins the sections that deal with <title>
[refsynopsisdiv_title]
;tag_attr = true
;attr_name = title
cdata_start = true
;cdata_end = true
open = <h1 class="title">
close = </h1>

[refsect1_title]
;tag_attr = true
;attr_name = title
cdata_start = true
;cdata_end = true
open = <h2 class="title">
close = </h2>

[refsect2_title]
;tag_attr = true
;attr_name = title
cdata_start = true
;cdata_end = true
open = <h3 class="title">
close = </h3>

[refsect3_title]
;tag_attr = true
;attr_name = title
cdata_start = true
;cdata_end = true
open = <h4 class="title">
close = </h4>

[para_title]
;tag_attr = true
;attr_name = title
cdata_start = true
;cdata_end = true
open = <div class="title">
close = </div>

[formalpara_title]
;tag_attr = true
;attr_name = title
cdata_start = true
;cdata_end = true
open = <div class="title">
close = </div>

[example_title]
;tag_attr = true
;attr_name = title
;cdata_start = true
cdata_end = true
open = </td></tr><tr><td><strong>
close = </strong>

[table_title]
;tag_attr = true
;attr_name = true
cdata_start = true
open = <caption>
close = </caption>
