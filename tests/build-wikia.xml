<?xml version="1.0" encoding="UTF-8"?>
<project name="Wikia QA" default="all" basedir=".">
    <description>Wikia QA Tests</description>
    <property file="build.properties"/>
    <property name="name" value="Wikia QA Tests"/>

    <property name="testsdir" value="${basedir}" />
    <property name="testsconfig" value="${testsdir}/config.xml" />

    <property name="build.src" location="${basedir}" />
    <property name="build.bin" location="${basedir}/build/bin" />
    <property name="build.logs" location="${basedir}/build/logs" />
    <property name="build.reports" location="${basedir}/build/reports" />

    <property name="webSite" value="" />
    <property name="seleniumHost" value="localhost" />
    <property name="seleniumPort" value="4444" />
    <property name="browser" value="*firefox" />
    <property name="localsettings" value="/usr/wikia/docroot/wiki.factory/LocalSettings.php" />

    <property name="groups" value="" />
    <property name="excludegroups" value="destructive,broken,answers,central" />
    <property name="phpunitgroups" value="" />
    <property name="phpunitexcludegroups" value="deprecated" />
    <property name="threadCount" value="1" />
    <property name="timeout" value="120000" />
    <property name="seleniumSpeed" value="1000" />

    <property name="noCloseAfterFail" value="0" />

    <target name="setup">
		<copy file="${basedir}/phpunit.xml.dist" tofile="${basedir}/phpunit.xml" />
		<copy file="${basedir}/config.xml.dist" tofile="${basedir}/config.xml" />
    </target>

	<target name="php" depends="setup">
		<mkdir dir="${basedir}/build/logs" />
		<exec executable="php" dir="${basedir}" failonerror="true">
			<env key="SERVER_ID" value="165" />
			<arg line="run-test.php
                       --log-junit ${basedir}/build/logs/phpunit.xml
                       --conf ${localsettings}
                       --configuration ${basedir}/phpunit.xml
					   --exclude-group Infrastructure,Integration,Broken,Stub,Monitoring,Hack
                       " />
		</exec>
	</target>

    <target name="phpunit" depends="setup">
		<mkdir dir="${basedir}/build/logs" />
        <exec executable="php" dir="${basedir}" failonerror="true">
            <env key="SERVER_ID" value="165" />
            <arg line="run-test.php
                       --log-junit ${basedir}/build/logs/phpunit.xml
                       --conf ${localsettings}
                       --configuration ${basedir}/phpunit.xml
					   --exclude-group ${phpunitexcludegroups}
                       " />
        </exec>
    </target>

    <target name="phpunit-single" depends="setup">
        <exec executable="php" dir="${basedir}" failonerror="true">
            <env key="SERVER_ID" value="165" />
            <arg line="run-test.php
                       --conf ${localsettings}
                       --configuration ${basedir}/phpunit.xml
                       ${unittest}
                       " />
        </exec>
    </target>

    <target name="js-single">
        <exec executable="phantomjs" dir="${basedir}" failonerror="true">
            <env key="SERVER_ID" value="165" />
            <arg line="run-test.js
                       ${unittest}
                       " />
        </exec>
    </target>

    <target name="js">
		<mkdir dir="${basedir}/build" />
        <exec executable="phantomjs" dir="${basedir}" failonerror="true">
            <env key="SERVER_ID" value="165" />
            <arg line="run-test.js
            		../extensions/wikia
            		../resources/wikia/modules
					--output=${basedir}/build
            	" />
        </exec>
    </target>

    <target name="phpunit-coverage" depends="setup">
		<mkdir dir="${basedir}/build/coverage" />
        <exec executable="php" dir="${basedir}" failonerror="true">
            <env key="SERVER_ID" value="165" />
            <arg line="run-test.php
                       --conf ${localsettings}
                       --configuration ${basedir}/phpunit.xml
                       --coverage-html ${basedir}/build/coverage
                       --exclude-group Infrastructure,Integration,Broken,Stub,Monitoring,Hack
                       " />
        </exec>
    </target>

    <target name="phpunit-single-coverage" depends="setup">
        <exec executable="php" dir="${basedir}" failonerror="true">
            <env key="SERVER_ID" value="165" />
            <arg line="run-test.php
                       --conf ${localsettings}
                       --configuration ${basedir}/phpunit.xml
                       --coverage-html ${basedir}/build/coverage
                       ${unittest}
                       " />
        </exec>
    </target>

	<target name="codelint-php">
		<mkdir dir="${basedir}/build" />
		<exec executable="php" dir="${basedir}/../maintenance/wikia" failonerror="true">
			<env key="SERVER_ID" value="165" />
			<arg line="codelint.php
					   --conf ${localsettings}
					   --mode=php
					   --dir=${basedir}/../extensions/wikia,${basedir}/../includes/wikia,${basedir}/../skins/oasis,${basedir}/../extensions/3rdparty/LyricWiki
					   --blacklist=extensions/wikia/hacks,extensions/wikia/CodeLint/examples,/templates/,.tmpl.php,.setup.php,/tests/
					   --format=html
					   --output=${basedir}/build/phplint.html
					   " />
		</exec>
	</target>

	<target name="codelint-js">
		<mkdir dir="${basedir}/build" />
		<exec executable="php" dir="${basedir}/../maintenance/wikia" failonerror="true">
			<env key="SERVER_ID" value="165" />
			<arg line="codelint.php
					   --conf ${localsettings}
					   --mode=js
					   --dir=${basedir}/../skins/oasis,${basedir}/../skins/wikia,${basedir}/../resources,${basedir}/../extensions/wikia
					   --blacklist=/CodeLint/examples/anticode.js,/AdEngine/ghost/,/libraries/zepto/,/libraries/yui,/CodeLint/js/,/RTE/ckeditor/_../,/jquery/jquery-,/resources/jquery,/resources/mediawiki,/Chat/js/lib/,lib/socket.io,/AdEngine/bezen/,/extensions/wikia/hacks,/extensions/wikia/SemanticBundle,qunit/qunit.js,jasmine/jasmine.js,/resources/mediawiki.language/
					   --format=html
					   --output=${basedir}/build/jslint.html
					   " />
		</exec>
	</target>

    <path id="compile.classpath">
        <fileset dir="${basedir}/lib">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <path id="runtime.classpath">
        <path refid="compile.classpath" />
        <pathelement path="${build.bin}/" />
        <pathelement path="${basedir}" />
    </path>

    <taskdef resource="testngtasks" classpath="${basedir}/lib/testng-6.1.1.jar" />

    <target name="compile" description="compile the source ">
        <mkdir dir="${build.bin}" />
        <javac srcdir="${build.src}"
               destdir="${build.bin}"
               debug="true"
               source="1.5"
               target="1.5">
            <classpath refid="compile.classpath" />
        </javac>
    </target>

    <target name="testng-run-all" depends="compile" description="Run all Selenium tests">
        <testng classpathref="runtime.classpath"
                outputdir="${build.logs}"
                suitename="Selenium tests - first run"
                listeners="org.testng.reporters.DotTestListener,org.uncommons.reportng.JUnitXMLReporter"
                parallel="methods"
                threadCount="${threadCount}"
                groups="${groups}"
                excludedgroups="${excludegroups}"
                failureProperty="test.failed"
                verbose="2">
            <classfileset dir="${build.bin}/com/wikia/selenium/tests" includes="*.class" />
            <sysproperty key="java.security.policy" file="${testsdir}/testng.policy"/>
            <sysproperty key="webSite" value="${webSite}" />
            <sysproperty key="seleniumHost" value="${seleniumHost}" />
            <sysproperty key="seleniumPort" value="${seleniumPort}" />
            <sysproperty key="browser" value="${browser}" />
            <sysproperty key="threadCount" value="${threadCount}" />
            <sysproperty key="timeout" value="${timeout}" />
            <sysproperty key="noCloseAfterFail" value="${noCloseAfterFail}" />
            <sysproperty key="seleniumSpeed" value="${seleniumSpeed}" />
            <env key="TESTSCONFIG" value="${testsconfig}" />
        </testng>
    </target>

    <target name="testng-run-failed" depends="testng-run-all" if="test.failed" description="Run failed Selenium tests">
        <testng classpathref="runtime.classpath"
                outputdir="${build.logs}"
                suitename="Selenium tests - second run"
                listeners="org.testng.reporters.DotTestListener,org.uncommons.reportng.JUnitXMLReporter"
                failureProperty="retest.failed"
                verbose="2">
            <xmlfileset file="${build.logs}/testng-failed.xml" />
            <sysproperty key="java.security.policy" file="testng.policy"/>
            <sysproperty key="webSite" value="${webSite}" />
            <sysproperty key="seleniumHost" value="${seleniumHost}" />
            <sysproperty key="seleniumPort" value="${seleniumPort}" />
            <sysproperty key="browser" value="${browser}" />
            <sysproperty key="threadCount" value="${threadCount}" />
            <sysproperty key="timeout" value="${timeout}" />
            <sysproperty key="noCloseAfterFail" value="${noCloseAfterFail}" />
            <sysproperty key="seleniumSpeed" value="${seleniumSpeed}" />
            <env key="TESTSCONFIG" value="${testsconfig}" />
        </testng>
    </target>

    <target name="testng-run" depends="testng-run-failed" description="Run all tests and automatically rerun failed ones" >
        <junitreport todir="${build.logs}">
            <fileset dir="${build.logs}/xml">
                <include name="*.xml" />
            </fileset>
            <report format="frames" todir="${build.reports}" />
        </junitreport>
        <fail if="retest.failed" />
    </target>

    <target name="testng-run-single" depends="compile" description="Run a single Selenium test">
        <testng classpathref="runtime.classpath"
                outputdir="${build.logs}"
                suitename="Wikia QA Single Test"
                listeners="org.testng.reporters.DotTestListener,org.uncommons.reportng.JUnitXMLReporter"
                parallel="methods"
                threadCount="1"
                groups="${groups}"
                excludedgroups="${excludegroups}"
                failureProperty="test.failed"
                verbose="2">
            <classfileset file="${build.bin}/com/wikia/selenium/tests/${testClass}.class" />
            <sysproperty key="java.security.policy" file="${testsdir}/testng.policy"/>
            <sysproperty key="webSite" value="${webSite}" />
            <sysproperty key="seleniumHost" value="${seleniumHost}" />
            <sysproperty key="seleniumPort" value="${seleniumPort}" />
            <sysproperty key="browser" value="${browser}" />
            <sysproperty key="timeout" value="${timeout}" />
            <sysproperty key="noCloseAfterFail" value="${noCloseAfterFail}" />
            <sysproperty key="seleniumSpeed" value="${seleniumSpeed}" />
            <env key="TESTSCONFIG" value="${testsconfig}" />
        </testng>
        <junitreport todir="${build.logs}">
            <fileset dir="${build.logs}/xml">
                <include name="*.xml" />
            </fileset>
            <report format="frames" todir="${build.reports}" />
        </junitreport>
        <fail if="test.failed" />
    </target>

    <target name="start-server" >
        <java jar="lib/selenium-server.jar" fork="true" spawn="true">
            <arg value="-avoidProxy" />
            <arg value="-ensureCleanSession" />
        </java>
    </target>

    <target name="stop-server" >
        <get taskname="selenium-shutdown"
             src="http://localhost:4444/selenium-server/driver/?cmd=shutDownSeleniumServer"
             dest="result.txt"
             ignoreerrors="true" />
        <echo taskname="selenium-shutdown" message="DGF Errors during shutdown are expected" />
    </target>

    <target name="all" depends="testng-run">
    </target>

</project>
