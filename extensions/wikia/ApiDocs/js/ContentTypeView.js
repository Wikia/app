// Generated by CoffeeScript 1.6.1
(function() {
	var ContentTypeView,
		__hasProp = {}.hasOwnProperty,
		__extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

	ContentTypeView = (function(_super) {

		__extends(ContentTypeView, _super);

		function ContentTypeView() {
			return ContentTypeView.__super__.constructor.apply(this, arguments);
		}

		ContentTypeView.prototype.initialize = function() {};

		ContentTypeView.prototype.render = function() {
			var template;
			template = this.template();
			$(this.el).html(template(this.model));
			this.isParam = this.model.isParam;
			if (this.isParam) {
				$('label[for=contentType]', $(this.el)).text('Parameter content type:');
			} else {
				$('label[for=contentType]', $(this.el)).text('Response Content Type');
			}
			return this;
		};

		ContentTypeView.prototype.template = function() {
			return Handlebars.templates.content_type;
		};

		return ContentTypeView;

	})(Backbone.View);

	window.ContentTypeView = ContentTypeView; // make it public
}).call(this);
