// Generated by CoffeeScript 1.6.1
(function() {
	var SwaggerUi,
		__hasProp = {}.hasOwnProperty,
		__extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

	SwaggerUi = (function(_super) {

		__extends(SwaggerUi, _super);

		function SwaggerUi() {
			return SwaggerUi.__super__.constructor.apply(this, arguments);
		}

		SwaggerUi.prototype.dom_id = "swagger_ui";

		SwaggerUi.prototype.options = null;

		SwaggerUi.prototype.api = null;

		SwaggerUi.prototype.headerView = null;

		SwaggerUi.prototype.mainView = null;

		SwaggerUi.prototype.initialize = function(options) {
			var _this = this;
			if (options == null) {
				options = {};
			}
			if (options.dom_id != null) {
				this.dom_id = options.dom_id;
				delete options.dom_id;
			}
			if ($('#' + this.dom_id) == null) {
				$('body').append('<div id="' + this.dom_id + '"></div>');
			}
			this.options = options;
			this.options.success = function() {
				return _this.render();
			};
			this.options.progress = function(d) {
				return _this.showMessage(d);
			};
			this.options.failure = function(d) {
				return _this.onLoadFailure(d);
			};
			this.headerView = new HeaderView({
				el: $('#header')
			});
			return this.headerView.on('update-swagger-ui', function(data) {
				return _this.updateSwaggerUi(data);
			});
		};

		SwaggerUi.prototype.updateSwaggerUi = function(data) {
			this.options.discoveryUrl = data.discoveryUrl;
			this.options.apiKey = data.apiKey;
			return this.load();
		};

		SwaggerUi.prototype.load = function() {
			var _ref;
			if ((_ref = this.mainView) != null) {
				_ref.clear();
			}
			this.headerView.update(this.options.discoveryUrl, this.options.apiKey);
			return this.api = new SwaggerApi(this.options);
		};

		SwaggerUi.prototype.render = function() {
			var _this = this;
			this.showMessage('Finished Loading Resource Information. Rendering Swagger UI...');
			this.mainView = new MainView({
				model: this.api,
				el: $('#' + this.dom_id)
			}).render();
			this.showMessage();
			switch (this.options.docExpansion) {
				case "full":
					Docs.expandOperationsForResource('');
					break;
				case "list":
					Docs.collapseOperationsForResource('');
			}
			if (this.options.onComplete) {
				this.options.onComplete(this.api, this);
			}
			return setTimeout(function() {
				return Docs.shebang();
			}, 400);
		};

		SwaggerUi.prototype.showMessage = function(data) {
			if (data == null) {
				data = '';
			}
			$('#message-bar').removeClass('message-fail');
			$('#message-bar').addClass('message-success');
			return $('#message-bar').html(data);
		};

		SwaggerUi.prototype.onLoadFailure = function(data) {
			var val;
			if (data == null) {
				data = '';
			}
			$('#message-bar').removeClass('message-success');
			$('#message-bar').addClass('message-fail');
			val = $('#message-bar').html(data);
			if (this.options.onFailure != null) {
				this.options.onFailure(data);
			}
			return val;
		};

		return SwaggerUi;

	})(Backbone.Router);

	window.SwaggerUi = SwaggerUi;

}).call(this);
