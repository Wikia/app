// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source
@import 'grid.variables';
@import 'grid.mixins';

@include exports("grid") {
  @if $include-html-grid-classes {
    .row {
      @include grid-row;

      &.collapse {
        .row {margin-left:0; margin-right:0;}
      }
    }

    [class*="column"] + [class*="column"]:last-child { float: $opposite-direction; }
    [class*="column"] + [class*="column"].end { float: $default-float; }

    @media #{$small-up} {
      .row {
        &.collapse {
          > .column,
          > .columns { @include grid-column($collapse:true, $float:false, $gutter:$small-grid-gutter); }
        }

        .row { @include grid-row($behavior:nest, $gutter:$small-grid-gutter);
          &.collapse { @include grid-row($behavior:nest-collapse, $gutter:$small-grid-gutter); }
        }
      }

      .column,
      .columns { @include grid-column($columns:$total-columns, $gutter:$small-grid-gutter); }

      @include grid-html-classes($size:small, $gutter:$small-grid-gutter);
    }

    @media #{$medium-up} {
      .row {
        &.collapse {
          > .column,
          > .columns { @include grid-column($collapse:true, $float:false, $gutter:$medium-grid-gutter); }
        }

        .row { @include grid-row($behavior:nest, $gutter:$medium-grid-gutter);
          &.collapse { @include grid-row($behavior:nest-collapse, $gutter:$medium-grid-gutter); }
        }
      }

      .column,
      .columns { @include grid-column($columns:$total-columns, $gutter:$medium-grid-gutter); }

      @include grid-html-classes($size:medium, $gutter:$medium-grid-gutter);

      // Old push and pull classes
      @for $i from 0 through $total-columns - 1 {
        .push-#{$i} {
          @include grid-column($push:$i, $collapse:null, $float:false, $gutter:$medium-grid-gutter);
        }
        .pull-#{$i} {
          @include grid-column($pull:$i, $collapse:null, $float:false, $gutter:$medium-grid-gutter);
        }
      }
    }
    @media #{$large-up} {
      .row {
        &.collapse {
          > .column,
          > .columns { @include grid-column($collapse:true, $float:false, $gutter:$large-grid-gutter); }
        }

        .row { @include grid-row($behavior:nest, $gutter:$large-grid-gutter);
          &.collapse { @include grid-row($behavior:nest-collapse, $gutter:$large-grid-gutter); }
        }
      }

      .column,
      .columns { @include grid-column($columns:$total-columns, $gutter:$large-grid-gutter); }

      @include grid-html-classes($size:large, $gutter:$large-grid-gutter);

      @for $i from 0 through $total-columns - 1 {
        .push-#{$i} {
          @include grid-column($push:$i, $collapse:null, $float:false, $gutter:$large-grid-gutter);
        }
        .pull-#{$i} {
          @include grid-column($pull:$i, $collapse:null, $float:false, $gutter:$large-grid-gutter);
        }
      }
    }
  }
  @if $include-xl-html-grid-classes {
    @media #{$xlarge-up} {
      @include grid-html-classes($size:xlarge);
    }
    @media #{$xxlarge-up} {
      @include grid-html-classes($size:xxlarge);
    }
  }
}
