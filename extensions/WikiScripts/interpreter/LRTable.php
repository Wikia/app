<?php

/**
 * Autogenerated SLR-table for scripts language.
 *
 * You should not try to modify it manually (it's very easy to break).
 * Use syntax.txt and buildLRTables.php insteaed.
 *
 * Actions have following syntax
 *   array( 0, N ) means "shift and go to state N"
 *   array( 1, N ) means "reduce to production N"
 *   array( 2 ) means "accept"
 *   null means "error"
 *
 * Terminals are referred by names, nonterminals - by ids.
 *
 * Variables has following format:
 * * $nonterminals is a nonterminal ID -> name map.
 * * $productions is a ID -> array( nonterminal, body ) map.
 * * Production body is an array of production symbols
 *
 * Generated on 2011-08-13 21:53:42.
 */

class WSLRTable {

const Timestamp = '2011-08-13 21:53:42';

static $nonterminals = array(
	0 => 'module',
	1 => 'functions',
	2 => 'function',
	3 => 'args',
	4 => 'stmts',
	5 => 'stmt',
	6 => 'expr',
	7 => 'forlvalue',
	8 => 'lvalue',
	9 => 'exprreturn',
	10 => 'exprset',
	11 => 'exprtrinary',
	12 => 'exprlogical',
	13 => 'exprcompare',
	14 => 'exprequals',
	15 => 'exprsum',
	16 => 'exprmul',
	17 => 'exprpow',
	18 => 'exprinvert',
	19 => 'exprkeyword',
	20 => 'exprunary',
	21 => 'exprfunction',
	22 => 'funcid',
	23 => 'commalistplain',
	24 => 'varfunc',
	25 => 'expratom',
	26 => 'atom',
	27 => 'commalistassoc',
	28 => 'keyvalue',
	29 => 'arrayidx',
);

static $productions = array(
	0 => array( 0, array( 1 ) ),
	1 => array( 1, array( 2, 1 ) ),
	2 => array( 1, array( 2 ) ),
	3 => array( 2, array( 'function', 'id', 'leftbracket', 3, 'rightbracket', 'leftcurly', 4, 'rightcurly' ) ),
	4 => array( 2, array( 'function', 'id', 'leftbracket', 'rightbracket', 'leftcurly', 4, 'rightcurly' ) ),
	5 => array( 3, array( 'id', 'comma', 3 ) ),
	6 => array( 3, array( 'id' ) ),
	7 => array( 4, array( 4, 5 ) ),
	8 => array( 4, array( 5 ) ),
	9 => array( 5, array( 6, 'semicolon' ) ),
	10 => array( 5, array( 'if', 'leftbracket', 6, 'rightbracket', 5 ) ),
	11 => array( 5, array( 'if', 'leftbracket', 6, 'rightbracket', 5, 'else', 5 ) ),
	12 => array( 5, array( 'for', 'leftbracket', 7, 'in', 6, 'rightbracket', 5 ) ),
	13 => array( 5, array( 'try', 5, 'catch', 'leftbracket', 8, 'rightbracket', 5 ) ),
	14 => array( 5, array( 'leftcurly', 4, 'rightcurly' ) ),
	15 => array( 6, array( 9 ) ),
	16 => array( 9, array( 'return' ) ),
	17 => array( 9, array( 'return', 10 ) ),
	18 => array( 9, array( 10 ) ),
	19 => array( 9, array( 'append', 10 ) ),
	20 => array( 9, array( 'yield', 10 ) ),
	21 => array( 10, array( 8, 'setto', 10 ) ),
	22 => array( 10, array( 11 ) ),
	23 => array( 11, array( 12, 'trinary', 11, 'colon', 11 ) ),
	24 => array( 11, array( 12 ) ),
	25 => array( 12, array( 12, 'logicop', 13 ) ),
	26 => array( 12, array( 13 ) ),
	27 => array( 13, array( 13, 'compareop', 14 ) ),
	28 => array( 13, array( 14 ) ),
	29 => array( 14, array( 15, 'equalsto', 15 ) ),
	30 => array( 14, array( 15 ) ),
	31 => array( 15, array( 15, 'sum', 16 ) ),
	32 => array( 15, array( 16 ) ),
	33 => array( 16, array( 16, 'mul', 17 ) ),
	34 => array( 16, array( 17 ) ),
	35 => array( 17, array( 18, 'pow', 17 ) ),
	36 => array( 17, array( 18 ) ),
	37 => array( 18, array( 'invert', 19 ) ),
	38 => array( 18, array( 19 ) ),
	39 => array( 19, array( 20, 'in', 20 ) ),
	40 => array( 19, array( 20, 'contains', 20 ) ),
	41 => array( 19, array( 20 ) ),
	42 => array( 20, array( 'sum', 21 ) ),
	43 => array( 20, array( 21 ) ),
	44 => array( 21, array( 22, 'leftbracket', 23, 'rightbracket' ) ),
	45 => array( 21, array( 22, 'leftbracket', 'rightbracket' ) ),
	46 => array( 21, array( 24, 'leftbracket', 8, 'rightbracket' ) ),
	47 => array( 21, array( 25 ) ),
	48 => array( 25, array( 8 ) ),
	49 => array( 25, array( 26 ) ),
	50 => array( 25, array( 'break' ) ),
	51 => array( 25, array( 'continue' ) ),
	52 => array( 25, array( 'leftbracket', 6, 'rightbracket' ) ),
	53 => array( 25, array( 'leftsquare', 23, 'rightsquare' ) ),
	54 => array( 25, array( 'leftcurly', 27, 'rightcurly' ) ),
	55 => array( 24, array( 'isset' ) ),
	56 => array( 24, array( 'delete' ) ),
	57 => array( 22, array( 'id' ) ),
	58 => array( 22, array( 25, 'doublecolon', 'id' ) ),
	59 => array( 22, array( 'self', 'doublecolon', 'id' ) ),
	60 => array( 23, array( 23, 'comma', 6 ) ),
	61 => array( 23, array( 6 ) ),
	62 => array( 27, array( 27, 'comma', 28 ) ),
	63 => array( 27, array( 28 ) ),
	64 => array( 28, array( 6, 'colon', 6 ) ),
	65 => array( 26, array( 'string' ) ),
	66 => array( 26, array( 'int' ) ),
	67 => array( 26, array( 'float' ) ),
	68 => array( 26, array( 'true' ) ),
	69 => array( 26, array( 'false' ) ),
	70 => array( 26, array( 'null' ) ),
	71 => array( 8, array( 'id' ) ),
	72 => array( 8, array( 8, 29 ) ),
	73 => array( 29, array( 'leftsquare', 6, 'rightsquare' ) ),
	74 => array( 29, array( 'leftsquare', 'rightsquare' ) ),
	75 => array( 7, array( 8 ) ),
	76 => array( 7, array( 8, 'colon', 8 ) ),
);

static $action = array(
	0 => array(
		'function' => array( 0, 1 ),
	),
	1 => array(
		'id' => array( 0, 4 ),
	),
	2 => array(
		'$' => array( 2, null ),
	),
	3 => array(
		'$' => array( 1, 2 ),
		'function' => array( 0, 1 ),
	),
	4 => array(
		'leftbracket' => array( 0, 6 ),
	),
	5 => array(
		'$' => array( 1, 1 ),
	),
	6 => array(
		'rightbracket' => array( 0, 8 ),
		'id' => array( 0, 7 ),
	),
	7 => array(
		'comma' => array( 0, 10 ),
		'rightbracket' => array( 1, 6 ),
	),
	8 => array(
		'leftcurly' => array( 0, 11 ),
	),
	9 => array(
		'rightbracket' => array( 0, 12 ),
	),
	10 => array(
		'id' => array( 0, 7 ),
	),
	11 => array(
		'if' => array( 0, 17 ),
		'for' => array( 0, 18 ),
		'try' => array( 0, 19 ),
		'leftcurly' => array( 0, 16 ),
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	12 => array(
		'leftcurly' => array( 0, 58 ),
	),
	13 => array(
		'rightbracket' => array( 1, 5 ),
	),
	14 => array(
		'rightbracket' => array( 1, 71 ),
		'setto' => array( 1, 71 ),
		'in' => array( 1, 71 ),
		'pow' => array( 1, 71 ),
		'equalsto' => array( 1, 71 ),
		'trinary' => array( 1, 71 ),
		'semicolon' => array( 1, 71 ),
		'colon' => array( 1, 71 ),
		'logicop' => array( 1, 71 ),
		'compareop' => array( 1, 71 ),
		'sum' => array( 1, 71 ),
		'mul' => array( 1, 71 ),
		'contains' => array( 1, 71 ),
		'leftsquare' => array( 1, 71 ),
		'doublecolon' => array( 1, 71 ),
		'rightsquare' => array( 1, 71 ),
		'comma' => array( 1, 71 ),
		'rightcurly' => array( 1, 71 ),
		'leftbracket' => array( 1, 57 ),
	),
	15 => array(
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	16 => array(
		'if' => array( 0, 17 ),
		'for' => array( 0, 18 ),
		'try' => array( 0, 19 ),
		'leftcurly' => array( 0, 16 ),
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	17 => array(
		'leftbracket' => array( 0, 65 ),
	),
	18 => array(
		'leftbracket' => array( 0, 66 ),
	),
	19 => array(
		'if' => array( 0, 17 ),
		'for' => array( 0, 18 ),
		'try' => array( 0, 19 ),
		'leftcurly' => array( 0, 16 ),
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	20 => array(
		'semicolon' => array( 1, 16 ),
		'rightbracket' => array( 1, 16 ),
		'rightsquare' => array( 1, 16 ),
		'comma' => array( 1, 16 ),
		'colon' => array( 1, 16 ),
		'rightcurly' => array( 1, 16 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	21 => array(
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	22 => array(
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	23 => array(
		'id' => array( 0, 71 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	24 => array(
		'sum' => array( 0, 23 ),
		'id' => array( 0, 71 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	25 => array(
		'in' => array( 1, 50 ),
		'pow' => array( 1, 50 ),
		'equalsto' => array( 1, 50 ),
		'trinary' => array( 1, 50 ),
		'semicolon' => array( 1, 50 ),
		'rightbracket' => array( 1, 50 ),
		'colon' => array( 1, 50 ),
		'logicop' => array( 1, 50 ),
		'compareop' => array( 1, 50 ),
		'sum' => array( 1, 50 ),
		'mul' => array( 1, 50 ),
		'contains' => array( 1, 50 ),
		'doublecolon' => array( 1, 50 ),
		'rightsquare' => array( 1, 50 ),
		'comma' => array( 1, 50 ),
		'rightcurly' => array( 1, 50 ),
	),
	26 => array(
		'in' => array( 1, 51 ),
		'pow' => array( 1, 51 ),
		'equalsto' => array( 1, 51 ),
		'trinary' => array( 1, 51 ),
		'semicolon' => array( 1, 51 ),
		'rightbracket' => array( 1, 51 ),
		'colon' => array( 1, 51 ),
		'logicop' => array( 1, 51 ),
		'compareop' => array( 1, 51 ),
		'sum' => array( 1, 51 ),
		'mul' => array( 1, 51 ),
		'contains' => array( 1, 51 ),
		'doublecolon' => array( 1, 51 ),
		'rightsquare' => array( 1, 51 ),
		'comma' => array( 1, 51 ),
		'rightcurly' => array( 1, 51 ),
	),
	27 => array(
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	28 => array(
		'leftbracket' => array( 1, 55 ),
	),
	29 => array(
		'leftbracket' => array( 1, 56 ),
	),
	30 => array(
		'doublecolon' => array( 0, 77 ),
	),
	31 => array(
		'in' => array( 1, 65 ),
		'pow' => array( 1, 65 ),
		'equalsto' => array( 1, 65 ),
		'trinary' => array( 1, 65 ),
		'semicolon' => array( 1, 65 ),
		'rightbracket' => array( 1, 65 ),
		'colon' => array( 1, 65 ),
		'logicop' => array( 1, 65 ),
		'compareop' => array( 1, 65 ),
		'sum' => array( 1, 65 ),
		'mul' => array( 1, 65 ),
		'contains' => array( 1, 65 ),
		'doublecolon' => array( 1, 65 ),
		'rightsquare' => array( 1, 65 ),
		'comma' => array( 1, 65 ),
		'rightcurly' => array( 1, 65 ),
	),
	32 => array(
		'in' => array( 1, 66 ),
		'pow' => array( 1, 66 ),
		'equalsto' => array( 1, 66 ),
		'trinary' => array( 1, 66 ),
		'semicolon' => array( 1, 66 ),
		'rightbracket' => array( 1, 66 ),
		'colon' => array( 1, 66 ),
		'logicop' => array( 1, 66 ),
		'compareop' => array( 1, 66 ),
		'sum' => array( 1, 66 ),
		'mul' => array( 1, 66 ),
		'contains' => array( 1, 66 ),
		'doublecolon' => array( 1, 66 ),
		'rightsquare' => array( 1, 66 ),
		'comma' => array( 1, 66 ),
		'rightcurly' => array( 1, 66 ),
	),
	33 => array(
		'in' => array( 1, 67 ),
		'pow' => array( 1, 67 ),
		'equalsto' => array( 1, 67 ),
		'trinary' => array( 1, 67 ),
		'semicolon' => array( 1, 67 ),
		'rightbracket' => array( 1, 67 ),
		'colon' => array( 1, 67 ),
		'logicop' => array( 1, 67 ),
		'compareop' => array( 1, 67 ),
		'sum' => array( 1, 67 ),
		'mul' => array( 1, 67 ),
		'contains' => array( 1, 67 ),
		'doublecolon' => array( 1, 67 ),
		'rightsquare' => array( 1, 67 ),
		'comma' => array( 1, 67 ),
		'rightcurly' => array( 1, 67 ),
	),
	34 => array(
		'in' => array( 1, 68 ),
		'pow' => array( 1, 68 ),
		'equalsto' => array( 1, 68 ),
		'trinary' => array( 1, 68 ),
		'semicolon' => array( 1, 68 ),
		'rightbracket' => array( 1, 68 ),
		'colon' => array( 1, 68 ),
		'logicop' => array( 1, 68 ),
		'compareop' => array( 1, 68 ),
		'sum' => array( 1, 68 ),
		'mul' => array( 1, 68 ),
		'contains' => array( 1, 68 ),
		'doublecolon' => array( 1, 68 ),
		'rightsquare' => array( 1, 68 ),
		'comma' => array( 1, 68 ),
		'rightcurly' => array( 1, 68 ),
	),
	35 => array(
		'in' => array( 1, 69 ),
		'pow' => array( 1, 69 ),
		'equalsto' => array( 1, 69 ),
		'trinary' => array( 1, 69 ),
		'semicolon' => array( 1, 69 ),
		'rightbracket' => array( 1, 69 ),
		'colon' => array( 1, 69 ),
		'logicop' => array( 1, 69 ),
		'compareop' => array( 1, 69 ),
		'sum' => array( 1, 69 ),
		'mul' => array( 1, 69 ),
		'contains' => array( 1, 69 ),
		'doublecolon' => array( 1, 69 ),
		'rightsquare' => array( 1, 69 ),
		'comma' => array( 1, 69 ),
		'rightcurly' => array( 1, 69 ),
	),
	36 => array(
		'in' => array( 1, 70 ),
		'pow' => array( 1, 70 ),
		'equalsto' => array( 1, 70 ),
		'trinary' => array( 1, 70 ),
		'semicolon' => array( 1, 70 ),
		'rightbracket' => array( 1, 70 ),
		'colon' => array( 1, 70 ),
		'logicop' => array( 1, 70 ),
		'compareop' => array( 1, 70 ),
		'sum' => array( 1, 70 ),
		'mul' => array( 1, 70 ),
		'contains' => array( 1, 70 ),
		'doublecolon' => array( 1, 70 ),
		'rightsquare' => array( 1, 70 ),
		'comma' => array( 1, 70 ),
		'rightcurly' => array( 1, 70 ),
	),
	37 => array(
		'rightcurly' => array( 0, 78 ),
		'if' => array( 0, 17 ),
		'for' => array( 0, 18 ),
		'try' => array( 0, 19 ),
		'leftcurly' => array( 0, 16 ),
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	38 => array(
		'rightcurly' => array( 1, 8 ),
		'if' => array( 1, 8 ),
		'for' => array( 1, 8 ),
		'try' => array( 1, 8 ),
		'leftcurly' => array( 1, 8 ),
		'return' => array( 1, 8 ),
		'append' => array( 1, 8 ),
		'yield' => array( 1, 8 ),
		'id' => array( 1, 8 ),
		'invert' => array( 1, 8 ),
		'sum' => array( 1, 8 ),
		'break' => array( 1, 8 ),
		'continue' => array( 1, 8 ),
		'leftbracket' => array( 1, 8 ),
		'leftsquare' => array( 1, 8 ),
		'self' => array( 1, 8 ),
		'isset' => array( 1, 8 ),
		'delete' => array( 1, 8 ),
		'string' => array( 1, 8 ),
		'int' => array( 1, 8 ),
		'float' => array( 1, 8 ),
		'true' => array( 1, 8 ),
		'false' => array( 1, 8 ),
		'null' => array( 1, 8 ),
	),
	39 => array(
		'semicolon' => array( 0, 80 ),
	),
	40 => array(
		'setto' => array( 0, 81 ),
		'in' => array( 1, 48 ),
		'pow' => array( 1, 48 ),
		'equalsto' => array( 1, 48 ),
		'trinary' => array( 1, 48 ),
		'semicolon' => array( 1, 48 ),
		'rightbracket' => array( 1, 48 ),
		'colon' => array( 1, 48 ),
		'logicop' => array( 1, 48 ),
		'compareop' => array( 1, 48 ),
		'sum' => array( 1, 48 ),
		'mul' => array( 1, 48 ),
		'contains' => array( 1, 48 ),
		'doublecolon' => array( 1, 48 ),
		'rightsquare' => array( 1, 48 ),
		'comma' => array( 1, 48 ),
		'rightcurly' => array( 1, 48 ),
		'leftsquare' => array( 0, 82 ),
	),
	41 => array(
		'semicolon' => array( 1, 15 ),
		'rightbracket' => array( 1, 15 ),
		'rightsquare' => array( 1, 15 ),
		'comma' => array( 1, 15 ),
		'colon' => array( 1, 15 ),
		'rightcurly' => array( 1, 15 ),
	),
	42 => array(
		'semicolon' => array( 1, 18 ),
		'rightbracket' => array( 1, 18 ),
		'rightsquare' => array( 1, 18 ),
		'comma' => array( 1, 18 ),
		'colon' => array( 1, 18 ),
		'rightcurly' => array( 1, 18 ),
	),
	43 => array(
		'semicolon' => array( 1, 22 ),
		'rightbracket' => array( 1, 22 ),
		'rightsquare' => array( 1, 22 ),
		'comma' => array( 1, 22 ),
		'colon' => array( 1, 22 ),
		'rightcurly' => array( 1, 22 ),
	),
	44 => array(
		'trinary' => array( 0, 84 ),
		'semicolon' => array( 1, 24 ),
		'rightbracket' => array( 1, 24 ),
		'colon' => array( 1, 24 ),
		'rightsquare' => array( 1, 24 ),
		'comma' => array( 1, 24 ),
		'rightcurly' => array( 1, 24 ),
		'logicop' => array( 0, 85 ),
	),
	45 => array(
		'trinary' => array( 1, 26 ),
		'semicolon' => array( 1, 26 ),
		'rightbracket' => array( 1, 26 ),
		'colon' => array( 1, 26 ),
		'logicop' => array( 1, 26 ),
		'rightsquare' => array( 1, 26 ),
		'comma' => array( 1, 26 ),
		'rightcurly' => array( 1, 26 ),
		'compareop' => array( 0, 86 ),
	),
	46 => array(
		'trinary' => array( 1, 28 ),
		'semicolon' => array( 1, 28 ),
		'rightbracket' => array( 1, 28 ),
		'colon' => array( 1, 28 ),
		'logicop' => array( 1, 28 ),
		'compareop' => array( 1, 28 ),
		'rightsquare' => array( 1, 28 ),
		'comma' => array( 1, 28 ),
		'rightcurly' => array( 1, 28 ),
	),
	47 => array(
		'equalsto' => array( 0, 87 ),
		'trinary' => array( 1, 30 ),
		'semicolon' => array( 1, 30 ),
		'rightbracket' => array( 1, 30 ),
		'colon' => array( 1, 30 ),
		'logicop' => array( 1, 30 ),
		'compareop' => array( 1, 30 ),
		'rightsquare' => array( 1, 30 ),
		'comma' => array( 1, 30 ),
		'rightcurly' => array( 1, 30 ),
		'sum' => array( 0, 88 ),
	),
	48 => array(
		'equalsto' => array( 1, 32 ),
		'trinary' => array( 1, 32 ),
		'semicolon' => array( 1, 32 ),
		'rightbracket' => array( 1, 32 ),
		'colon' => array( 1, 32 ),
		'logicop' => array( 1, 32 ),
		'compareop' => array( 1, 32 ),
		'sum' => array( 1, 32 ),
		'rightsquare' => array( 1, 32 ),
		'comma' => array( 1, 32 ),
		'rightcurly' => array( 1, 32 ),
		'mul' => array( 0, 89 ),
	),
	49 => array(
		'equalsto' => array( 1, 34 ),
		'trinary' => array( 1, 34 ),
		'semicolon' => array( 1, 34 ),
		'rightbracket' => array( 1, 34 ),
		'colon' => array( 1, 34 ),
		'logicop' => array( 1, 34 ),
		'compareop' => array( 1, 34 ),
		'sum' => array( 1, 34 ),
		'mul' => array( 1, 34 ),
		'rightsquare' => array( 1, 34 ),
		'comma' => array( 1, 34 ),
		'rightcurly' => array( 1, 34 ),
	),
	50 => array(
		'pow' => array( 0, 90 ),
		'equalsto' => array( 1, 36 ),
		'trinary' => array( 1, 36 ),
		'semicolon' => array( 1, 36 ),
		'rightbracket' => array( 1, 36 ),
		'colon' => array( 1, 36 ),
		'logicop' => array( 1, 36 ),
		'compareop' => array( 1, 36 ),
		'sum' => array( 1, 36 ),
		'mul' => array( 1, 36 ),
		'rightsquare' => array( 1, 36 ),
		'comma' => array( 1, 36 ),
		'rightcurly' => array( 1, 36 ),
	),
	51 => array(
		'pow' => array( 1, 38 ),
		'equalsto' => array( 1, 38 ),
		'trinary' => array( 1, 38 ),
		'semicolon' => array( 1, 38 ),
		'rightbracket' => array( 1, 38 ),
		'colon' => array( 1, 38 ),
		'logicop' => array( 1, 38 ),
		'compareop' => array( 1, 38 ),
		'sum' => array( 1, 38 ),
		'mul' => array( 1, 38 ),
		'rightsquare' => array( 1, 38 ),
		'comma' => array( 1, 38 ),
		'rightcurly' => array( 1, 38 ),
	),
	52 => array(
		'in' => array( 0, 91 ),
		'contains' => array( 0, 92 ),
		'pow' => array( 1, 41 ),
		'equalsto' => array( 1, 41 ),
		'trinary' => array( 1, 41 ),
		'semicolon' => array( 1, 41 ),
		'rightbracket' => array( 1, 41 ),
		'colon' => array( 1, 41 ),
		'logicop' => array( 1, 41 ),
		'compareop' => array( 1, 41 ),
		'sum' => array( 1, 41 ),
		'mul' => array( 1, 41 ),
		'rightsquare' => array( 1, 41 ),
		'comma' => array( 1, 41 ),
		'rightcurly' => array( 1, 41 ),
	),
	53 => array(
		'in' => array( 1, 43 ),
		'pow' => array( 1, 43 ),
		'equalsto' => array( 1, 43 ),
		'trinary' => array( 1, 43 ),
		'semicolon' => array( 1, 43 ),
		'rightbracket' => array( 1, 43 ),
		'colon' => array( 1, 43 ),
		'logicop' => array( 1, 43 ),
		'compareop' => array( 1, 43 ),
		'sum' => array( 1, 43 ),
		'mul' => array( 1, 43 ),
		'contains' => array( 1, 43 ),
		'rightsquare' => array( 1, 43 ),
		'comma' => array( 1, 43 ),
		'rightcurly' => array( 1, 43 ),
	),
	54 => array(
		'leftbracket' => array( 0, 93 ),
	),
	55 => array(
		'leftbracket' => array( 0, 94 ),
	),
	56 => array(
		'in' => array( 1, 47 ),
		'pow' => array( 1, 47 ),
		'equalsto' => array( 1, 47 ),
		'trinary' => array( 1, 47 ),
		'semicolon' => array( 1, 47 ),
		'rightbracket' => array( 1, 47 ),
		'colon' => array( 1, 47 ),
		'logicop' => array( 1, 47 ),
		'compareop' => array( 1, 47 ),
		'sum' => array( 1, 47 ),
		'mul' => array( 1, 47 ),
		'contains' => array( 1, 47 ),
		'rightsquare' => array( 1, 47 ),
		'comma' => array( 1, 47 ),
		'rightcurly' => array( 1, 47 ),
		'doublecolon' => array( 0, 95 ),
	),
	57 => array(
		'in' => array( 1, 49 ),
		'pow' => array( 1, 49 ),
		'equalsto' => array( 1, 49 ),
		'trinary' => array( 1, 49 ),
		'semicolon' => array( 1, 49 ),
		'rightbracket' => array( 1, 49 ),
		'colon' => array( 1, 49 ),
		'logicop' => array( 1, 49 ),
		'compareop' => array( 1, 49 ),
		'sum' => array( 1, 49 ),
		'mul' => array( 1, 49 ),
		'contains' => array( 1, 49 ),
		'doublecolon' => array( 1, 49 ),
		'rightsquare' => array( 1, 49 ),
		'comma' => array( 1, 49 ),
		'rightcurly' => array( 1, 49 ),
	),
	58 => array(
		'if' => array( 0, 17 ),
		'for' => array( 0, 18 ),
		'try' => array( 0, 19 ),
		'leftcurly' => array( 0, 16 ),
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	59 => array(
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	60 => array(
		'rightbracket' => array( 0, 98 ),
	),
	61 => array(
		'rightcurly' => array( 0, 99 ),
		'if' => array( 0, 17 ),
		'for' => array( 0, 18 ),
		'try' => array( 0, 19 ),
		'leftcurly' => array( 0, 16 ),
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	62 => array(
		'semicolon' => array( 0, 80 ),
		'colon' => array( 0, 100 ),
	),
	63 => array(
		'rightcurly' => array( 0, 101 ),
		'comma' => array( 0, 102 ),
	),
	64 => array(
		'rightcurly' => array( 1, 63 ),
		'comma' => array( 1, 63 ),
	),
	65 => array(
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	66 => array(
		'id' => array( 0, 104 ),
	),
	67 => array(
		'catch' => array( 0, 107 ),
	),
	68 => array(
		'semicolon' => array( 1, 17 ),
		'rightbracket' => array( 1, 17 ),
		'rightsquare' => array( 1, 17 ),
		'comma' => array( 1, 17 ),
		'colon' => array( 1, 17 ),
		'rightcurly' => array( 1, 17 ),
	),
	69 => array(
		'semicolon' => array( 1, 19 ),
		'rightbracket' => array( 1, 19 ),
		'rightsquare' => array( 1, 19 ),
		'comma' => array( 1, 19 ),
		'colon' => array( 1, 19 ),
		'rightcurly' => array( 1, 19 ),
	),
	70 => array(
		'semicolon' => array( 1, 20 ),
		'rightbracket' => array( 1, 20 ),
		'rightsquare' => array( 1, 20 ),
		'comma' => array( 1, 20 ),
		'colon' => array( 1, 20 ),
		'rightcurly' => array( 1, 20 ),
	),
	71 => array(
		'leftbracket' => array( 1, 57 ),
		'rightbracket' => array( 1, 71 ),
		'setto' => array( 1, 71 ),
		'in' => array( 1, 71 ),
		'pow' => array( 1, 71 ),
		'equalsto' => array( 1, 71 ),
		'trinary' => array( 1, 71 ),
		'semicolon' => array( 1, 71 ),
		'colon' => array( 1, 71 ),
		'logicop' => array( 1, 71 ),
		'compareop' => array( 1, 71 ),
		'sum' => array( 1, 71 ),
		'mul' => array( 1, 71 ),
		'contains' => array( 1, 71 ),
		'leftsquare' => array( 1, 71 ),
		'doublecolon' => array( 1, 71 ),
		'rightsquare' => array( 1, 71 ),
		'comma' => array( 1, 71 ),
		'rightcurly' => array( 1, 71 ),
	),
	72 => array(
		'in' => array( 1, 48 ),
		'pow' => array( 1, 48 ),
		'equalsto' => array( 1, 48 ),
		'trinary' => array( 1, 48 ),
		'semicolon' => array( 1, 48 ),
		'rightbracket' => array( 1, 48 ),
		'colon' => array( 1, 48 ),
		'logicop' => array( 1, 48 ),
		'compareop' => array( 1, 48 ),
		'sum' => array( 1, 48 ),
		'mul' => array( 1, 48 ),
		'contains' => array( 1, 48 ),
		'doublecolon' => array( 1, 48 ),
		'rightsquare' => array( 1, 48 ),
		'comma' => array( 1, 48 ),
		'rightcurly' => array( 1, 48 ),
		'leftsquare' => array( 0, 82 ),
	),
	73 => array(
		'in' => array( 1, 42 ),
		'pow' => array( 1, 42 ),
		'equalsto' => array( 1, 42 ),
		'trinary' => array( 1, 42 ),
		'semicolon' => array( 1, 42 ),
		'rightbracket' => array( 1, 42 ),
		'colon' => array( 1, 42 ),
		'logicop' => array( 1, 42 ),
		'compareop' => array( 1, 42 ),
		'sum' => array( 1, 42 ),
		'mul' => array( 1, 42 ),
		'contains' => array( 1, 42 ),
		'rightsquare' => array( 1, 42 ),
		'comma' => array( 1, 42 ),
		'rightcurly' => array( 1, 42 ),
	),
	74 => array(
		'pow' => array( 1, 37 ),
		'equalsto' => array( 1, 37 ),
		'trinary' => array( 1, 37 ),
		'semicolon' => array( 1, 37 ),
		'rightbracket' => array( 1, 37 ),
		'colon' => array( 1, 37 ),
		'logicop' => array( 1, 37 ),
		'compareop' => array( 1, 37 ),
		'sum' => array( 1, 37 ),
		'mul' => array( 1, 37 ),
		'rightsquare' => array( 1, 37 ),
		'comma' => array( 1, 37 ),
		'rightcurly' => array( 1, 37 ),
	),
	75 => array(
		'rightbracket' => array( 1, 61 ),
		'rightsquare' => array( 1, 61 ),
		'comma' => array( 1, 61 ),
	),
	76 => array(
		'rightsquare' => array( 0, 109 ),
		'comma' => array( 0, 108 ),
	),
	77 => array(
		'id' => array( 0, 110 ),
	),
	78 => array(
		'function' => array( 1, 4 ),
		'$' => array( 1, 4 ),
	),
	79 => array(
		'rightcurly' => array( 1, 7 ),
		'if' => array( 1, 7 ),
		'for' => array( 1, 7 ),
		'try' => array( 1, 7 ),
		'leftcurly' => array( 1, 7 ),
		'return' => array( 1, 7 ),
		'append' => array( 1, 7 ),
		'yield' => array( 1, 7 ),
		'id' => array( 1, 7 ),
		'invert' => array( 1, 7 ),
		'sum' => array( 1, 7 ),
		'break' => array( 1, 7 ),
		'continue' => array( 1, 7 ),
		'leftbracket' => array( 1, 7 ),
		'leftsquare' => array( 1, 7 ),
		'self' => array( 1, 7 ),
		'isset' => array( 1, 7 ),
		'delete' => array( 1, 7 ),
		'string' => array( 1, 7 ),
		'int' => array( 1, 7 ),
		'float' => array( 1, 7 ),
		'true' => array( 1, 7 ),
		'false' => array( 1, 7 ),
		'null' => array( 1, 7 ),
	),
	80 => array(
		'rightcurly' => array( 1, 9 ),
		'if' => array( 1, 9 ),
		'for' => array( 1, 9 ),
		'try' => array( 1, 9 ),
		'leftcurly' => array( 1, 9 ),
		'return' => array( 1, 9 ),
		'append' => array( 1, 9 ),
		'yield' => array( 1, 9 ),
		'id' => array( 1, 9 ),
		'invert' => array( 1, 9 ),
		'sum' => array( 1, 9 ),
		'break' => array( 1, 9 ),
		'continue' => array( 1, 9 ),
		'leftbracket' => array( 1, 9 ),
		'leftsquare' => array( 1, 9 ),
		'self' => array( 1, 9 ),
		'isset' => array( 1, 9 ),
		'delete' => array( 1, 9 ),
		'string' => array( 1, 9 ),
		'int' => array( 1, 9 ),
		'float' => array( 1, 9 ),
		'true' => array( 1, 9 ),
		'false' => array( 1, 9 ),
		'null' => array( 1, 9 ),
		'else' => array( 1, 9 ),
		'catch' => array( 1, 9 ),
	),
	81 => array(
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	82 => array(
		'rightsquare' => array( 0, 112 ),
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	83 => array(
		'rightbracket' => array( 1, 72 ),
		'setto' => array( 1, 72 ),
		'in' => array( 1, 72 ),
		'pow' => array( 1, 72 ),
		'equalsto' => array( 1, 72 ),
		'trinary' => array( 1, 72 ),
		'semicolon' => array( 1, 72 ),
		'colon' => array( 1, 72 ),
		'logicop' => array( 1, 72 ),
		'compareop' => array( 1, 72 ),
		'sum' => array( 1, 72 ),
		'mul' => array( 1, 72 ),
		'contains' => array( 1, 72 ),
		'leftsquare' => array( 1, 72 ),
		'doublecolon' => array( 1, 72 ),
		'rightsquare' => array( 1, 72 ),
		'comma' => array( 1, 72 ),
		'rightcurly' => array( 1, 72 ),
	),
	84 => array(
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'id' => array( 0, 71 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	85 => array(
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'id' => array( 0, 71 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	86 => array(
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'id' => array( 0, 71 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	87 => array(
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'id' => array( 0, 71 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	88 => array(
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'id' => array( 0, 71 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	89 => array(
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'id' => array( 0, 71 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	90 => array(
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'id' => array( 0, 71 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	91 => array(
		'sum' => array( 0, 23 ),
		'id' => array( 0, 71 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	92 => array(
		'sum' => array( 0, 23 ),
		'id' => array( 0, 71 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	93 => array(
		'rightbracket' => array( 0, 123 ),
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	94 => array(
		'id' => array( 0, 104 ),
	),
	95 => array(
		'id' => array( 0, 126 ),
	),
	96 => array(
		'rightcurly' => array( 0, 127 ),
		'if' => array( 0, 17 ),
		'for' => array( 0, 18 ),
		'try' => array( 0, 19 ),
		'leftcurly' => array( 0, 16 ),
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	97 => array(
		'colon' => array( 0, 100 ),
	),
	98 => array(
		'in' => array( 1, 52 ),
		'pow' => array( 1, 52 ),
		'equalsto' => array( 1, 52 ),
		'trinary' => array( 1, 52 ),
		'semicolon' => array( 1, 52 ),
		'rightbracket' => array( 1, 52 ),
		'colon' => array( 1, 52 ),
		'logicop' => array( 1, 52 ),
		'compareop' => array( 1, 52 ),
		'sum' => array( 1, 52 ),
		'mul' => array( 1, 52 ),
		'contains' => array( 1, 52 ),
		'doublecolon' => array( 1, 52 ),
		'rightsquare' => array( 1, 52 ),
		'comma' => array( 1, 52 ),
		'rightcurly' => array( 1, 52 ),
	),
	99 => array(
		'rightcurly' => array( 1, 14 ),
		'if' => array( 1, 14 ),
		'for' => array( 1, 14 ),
		'try' => array( 1, 14 ),
		'leftcurly' => array( 1, 14 ),
		'return' => array( 1, 14 ),
		'append' => array( 1, 14 ),
		'yield' => array( 1, 14 ),
		'id' => array( 1, 14 ),
		'invert' => array( 1, 14 ),
		'sum' => array( 1, 14 ),
		'break' => array( 1, 14 ),
		'continue' => array( 1, 14 ),
		'leftbracket' => array( 1, 14 ),
		'leftsquare' => array( 1, 14 ),
		'self' => array( 1, 14 ),
		'isset' => array( 1, 14 ),
		'delete' => array( 1, 14 ),
		'string' => array( 1, 14 ),
		'int' => array( 1, 14 ),
		'float' => array( 1, 14 ),
		'true' => array( 1, 14 ),
		'false' => array( 1, 14 ),
		'null' => array( 1, 14 ),
		'else' => array( 1, 14 ),
		'catch' => array( 1, 14 ),
	),
	100 => array(
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	101 => array(
		'in' => array( 1, 54 ),
		'pow' => array( 1, 54 ),
		'equalsto' => array( 1, 54 ),
		'trinary' => array( 1, 54 ),
		'semicolon' => array( 1, 54 ),
		'rightbracket' => array( 1, 54 ),
		'colon' => array( 1, 54 ),
		'logicop' => array( 1, 54 ),
		'compareop' => array( 1, 54 ),
		'sum' => array( 1, 54 ),
		'mul' => array( 1, 54 ),
		'contains' => array( 1, 54 ),
		'doublecolon' => array( 1, 54 ),
		'rightsquare' => array( 1, 54 ),
		'comma' => array( 1, 54 ),
		'rightcurly' => array( 1, 54 ),
	),
	102 => array(
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	103 => array(
		'rightbracket' => array( 0, 130 ),
	),
	104 => array(
		'rightbracket' => array( 1, 71 ),
		'setto' => array( 1, 71 ),
		'in' => array( 1, 71 ),
		'pow' => array( 1, 71 ),
		'equalsto' => array( 1, 71 ),
		'trinary' => array( 1, 71 ),
		'semicolon' => array( 1, 71 ),
		'colon' => array( 1, 71 ),
		'logicop' => array( 1, 71 ),
		'compareop' => array( 1, 71 ),
		'sum' => array( 1, 71 ),
		'mul' => array( 1, 71 ),
		'contains' => array( 1, 71 ),
		'leftsquare' => array( 1, 71 ),
		'doublecolon' => array( 1, 71 ),
		'rightsquare' => array( 1, 71 ),
		'comma' => array( 1, 71 ),
		'rightcurly' => array( 1, 71 ),
	),
	105 => array(
		'in' => array( 0, 131 ),
	),
	106 => array(
		'in' => array( 1, 75 ),
		'colon' => array( 0, 132 ),
		'leftsquare' => array( 0, 82 ),
	),
	107 => array(
		'leftbracket' => array( 0, 133 ),
	),
	108 => array(
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	109 => array(
		'in' => array( 1, 53 ),
		'pow' => array( 1, 53 ),
		'equalsto' => array( 1, 53 ),
		'trinary' => array( 1, 53 ),
		'semicolon' => array( 1, 53 ),
		'rightbracket' => array( 1, 53 ),
		'colon' => array( 1, 53 ),
		'logicop' => array( 1, 53 ),
		'compareop' => array( 1, 53 ),
		'sum' => array( 1, 53 ),
		'mul' => array( 1, 53 ),
		'contains' => array( 1, 53 ),
		'doublecolon' => array( 1, 53 ),
		'rightsquare' => array( 1, 53 ),
		'comma' => array( 1, 53 ),
		'rightcurly' => array( 1, 53 ),
	),
	110 => array(
		'leftbracket' => array( 1, 59 ),
	),
	111 => array(
		'semicolon' => array( 1, 21 ),
		'rightbracket' => array( 1, 21 ),
		'rightsquare' => array( 1, 21 ),
		'comma' => array( 1, 21 ),
		'colon' => array( 1, 21 ),
		'rightcurly' => array( 1, 21 ),
	),
	112 => array(
		'rightbracket' => array( 1, 74 ),
		'setto' => array( 1, 74 ),
		'in' => array( 1, 74 ),
		'pow' => array( 1, 74 ),
		'equalsto' => array( 1, 74 ),
		'trinary' => array( 1, 74 ),
		'semicolon' => array( 1, 74 ),
		'colon' => array( 1, 74 ),
		'logicop' => array( 1, 74 ),
		'compareop' => array( 1, 74 ),
		'sum' => array( 1, 74 ),
		'mul' => array( 1, 74 ),
		'contains' => array( 1, 74 ),
		'leftsquare' => array( 1, 74 ),
		'doublecolon' => array( 1, 74 ),
		'rightsquare' => array( 1, 74 ),
		'comma' => array( 1, 74 ),
		'rightcurly' => array( 1, 74 ),
	),
	113 => array(
		'rightsquare' => array( 0, 135 ),
	),
	114 => array(
		'colon' => array( 0, 136 ),
	),
	115 => array(
		'trinary' => array( 1, 25 ),
		'semicolon' => array( 1, 25 ),
		'rightbracket' => array( 1, 25 ),
		'colon' => array( 1, 25 ),
		'logicop' => array( 1, 25 ),
		'rightsquare' => array( 1, 25 ),
		'comma' => array( 1, 25 ),
		'rightcurly' => array( 1, 25 ),
		'compareop' => array( 0, 86 ),
	),
	116 => array(
		'trinary' => array( 1, 27 ),
		'semicolon' => array( 1, 27 ),
		'rightbracket' => array( 1, 27 ),
		'colon' => array( 1, 27 ),
		'logicop' => array( 1, 27 ),
		'compareop' => array( 1, 27 ),
		'rightsquare' => array( 1, 27 ),
		'comma' => array( 1, 27 ),
		'rightcurly' => array( 1, 27 ),
	),
	117 => array(
		'trinary' => array( 1, 29 ),
		'semicolon' => array( 1, 29 ),
		'rightbracket' => array( 1, 29 ),
		'colon' => array( 1, 29 ),
		'logicop' => array( 1, 29 ),
		'compareop' => array( 1, 29 ),
		'rightsquare' => array( 1, 29 ),
		'comma' => array( 1, 29 ),
		'rightcurly' => array( 1, 29 ),
		'sum' => array( 0, 88 ),
	),
	118 => array(
		'equalsto' => array( 1, 31 ),
		'trinary' => array( 1, 31 ),
		'semicolon' => array( 1, 31 ),
		'rightbracket' => array( 1, 31 ),
		'colon' => array( 1, 31 ),
		'logicop' => array( 1, 31 ),
		'compareop' => array( 1, 31 ),
		'sum' => array( 1, 31 ),
		'rightsquare' => array( 1, 31 ),
		'comma' => array( 1, 31 ),
		'rightcurly' => array( 1, 31 ),
		'mul' => array( 0, 89 ),
	),
	119 => array(
		'equalsto' => array( 1, 33 ),
		'trinary' => array( 1, 33 ),
		'semicolon' => array( 1, 33 ),
		'rightbracket' => array( 1, 33 ),
		'colon' => array( 1, 33 ),
		'logicop' => array( 1, 33 ),
		'compareop' => array( 1, 33 ),
		'sum' => array( 1, 33 ),
		'mul' => array( 1, 33 ),
		'rightsquare' => array( 1, 33 ),
		'comma' => array( 1, 33 ),
		'rightcurly' => array( 1, 33 ),
	),
	120 => array(
		'equalsto' => array( 1, 35 ),
		'trinary' => array( 1, 35 ),
		'semicolon' => array( 1, 35 ),
		'rightbracket' => array( 1, 35 ),
		'colon' => array( 1, 35 ),
		'logicop' => array( 1, 35 ),
		'compareop' => array( 1, 35 ),
		'sum' => array( 1, 35 ),
		'mul' => array( 1, 35 ),
		'rightsquare' => array( 1, 35 ),
		'comma' => array( 1, 35 ),
		'rightcurly' => array( 1, 35 ),
	),
	121 => array(
		'pow' => array( 1, 39 ),
		'equalsto' => array( 1, 39 ),
		'trinary' => array( 1, 39 ),
		'semicolon' => array( 1, 39 ),
		'rightbracket' => array( 1, 39 ),
		'colon' => array( 1, 39 ),
		'logicop' => array( 1, 39 ),
		'compareop' => array( 1, 39 ),
		'sum' => array( 1, 39 ),
		'mul' => array( 1, 39 ),
		'rightsquare' => array( 1, 39 ),
		'comma' => array( 1, 39 ),
		'rightcurly' => array( 1, 39 ),
	),
	122 => array(
		'pow' => array( 1, 40 ),
		'equalsto' => array( 1, 40 ),
		'trinary' => array( 1, 40 ),
		'semicolon' => array( 1, 40 ),
		'rightbracket' => array( 1, 40 ),
		'colon' => array( 1, 40 ),
		'logicop' => array( 1, 40 ),
		'compareop' => array( 1, 40 ),
		'sum' => array( 1, 40 ),
		'mul' => array( 1, 40 ),
		'rightsquare' => array( 1, 40 ),
		'comma' => array( 1, 40 ),
		'rightcurly' => array( 1, 40 ),
	),
	123 => array(
		'in' => array( 1, 45 ),
		'pow' => array( 1, 45 ),
		'equalsto' => array( 1, 45 ),
		'trinary' => array( 1, 45 ),
		'semicolon' => array( 1, 45 ),
		'rightbracket' => array( 1, 45 ),
		'colon' => array( 1, 45 ),
		'logicop' => array( 1, 45 ),
		'compareop' => array( 1, 45 ),
		'sum' => array( 1, 45 ),
		'mul' => array( 1, 45 ),
		'contains' => array( 1, 45 ),
		'rightsquare' => array( 1, 45 ),
		'comma' => array( 1, 45 ),
		'rightcurly' => array( 1, 45 ),
	),
	124 => array(
		'rightbracket' => array( 0, 137 ),
		'comma' => array( 0, 108 ),
	),
	125 => array(
		'rightbracket' => array( 0, 138 ),
		'leftsquare' => array( 0, 82 ),
	),
	126 => array(
		'leftbracket' => array( 1, 58 ),
	),
	127 => array(
		'function' => array( 1, 3 ),
		'$' => array( 1, 3 ),
	),
	128 => array(
		'rightcurly' => array( 1, 64 ),
		'comma' => array( 1, 64 ),
	),
	129 => array(
		'rightcurly' => array( 1, 62 ),
		'comma' => array( 1, 62 ),
	),
	130 => array(
		'if' => array( 0, 17 ),
		'for' => array( 0, 18 ),
		'try' => array( 0, 19 ),
		'leftcurly' => array( 0, 16 ),
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	131 => array(
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	132 => array(
		'id' => array( 0, 104 ),
	),
	133 => array(
		'id' => array( 0, 104 ),
	),
	134 => array(
		'rightbracket' => array( 1, 60 ),
		'rightsquare' => array( 1, 60 ),
		'comma' => array( 1, 60 ),
	),
	135 => array(
		'rightbracket' => array( 1, 73 ),
		'setto' => array( 1, 73 ),
		'in' => array( 1, 73 ),
		'pow' => array( 1, 73 ),
		'equalsto' => array( 1, 73 ),
		'trinary' => array( 1, 73 ),
		'semicolon' => array( 1, 73 ),
		'colon' => array( 1, 73 ),
		'logicop' => array( 1, 73 ),
		'compareop' => array( 1, 73 ),
		'sum' => array( 1, 73 ),
		'mul' => array( 1, 73 ),
		'contains' => array( 1, 73 ),
		'leftsquare' => array( 1, 73 ),
		'doublecolon' => array( 1, 73 ),
		'rightsquare' => array( 1, 73 ),
		'comma' => array( 1, 73 ),
		'rightcurly' => array( 1, 73 ),
	),
	136 => array(
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'id' => array( 0, 71 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'leftcurly' => array( 0, 59 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	137 => array(
		'in' => array( 1, 44 ),
		'pow' => array( 1, 44 ),
		'equalsto' => array( 1, 44 ),
		'trinary' => array( 1, 44 ),
		'semicolon' => array( 1, 44 ),
		'rightbracket' => array( 1, 44 ),
		'colon' => array( 1, 44 ),
		'logicop' => array( 1, 44 ),
		'compareop' => array( 1, 44 ),
		'sum' => array( 1, 44 ),
		'mul' => array( 1, 44 ),
		'contains' => array( 1, 44 ),
		'rightsquare' => array( 1, 44 ),
		'comma' => array( 1, 44 ),
		'rightcurly' => array( 1, 44 ),
	),
	138 => array(
		'in' => array( 1, 46 ),
		'pow' => array( 1, 46 ),
		'equalsto' => array( 1, 46 ),
		'trinary' => array( 1, 46 ),
		'semicolon' => array( 1, 46 ),
		'rightbracket' => array( 1, 46 ),
		'colon' => array( 1, 46 ),
		'logicop' => array( 1, 46 ),
		'compareop' => array( 1, 46 ),
		'sum' => array( 1, 46 ),
		'mul' => array( 1, 46 ),
		'contains' => array( 1, 46 ),
		'rightsquare' => array( 1, 46 ),
		'comma' => array( 1, 46 ),
		'rightcurly' => array( 1, 46 ),
	),
	139 => array(
		'rightcurly' => array( 1, 10 ),
		'if' => array( 1, 10 ),
		'for' => array( 1, 10 ),
		'try' => array( 1, 10 ),
		'leftcurly' => array( 1, 10 ),
		'return' => array( 1, 10 ),
		'append' => array( 1, 10 ),
		'yield' => array( 1, 10 ),
		'id' => array( 1, 10 ),
		'invert' => array( 1, 10 ),
		'sum' => array( 1, 10 ),
		'break' => array( 1, 10 ),
		'continue' => array( 1, 10 ),
		'leftbracket' => array( 1, 10 ),
		'leftsquare' => array( 1, 10 ),
		'self' => array( 1, 10 ),
		'isset' => array( 1, 10 ),
		'delete' => array( 1, 10 ),
		'string' => array( 1, 10 ),
		'int' => array( 1, 10 ),
		'float' => array( 1, 10 ),
		'true' => array( 1, 10 ),
		'false' => array( 1, 10 ),
		'null' => array( 1, 10 ),
		'else' => array( 0, 144 ),
		'catch' => array( 1, 10 ),
	),
	140 => array(
		'rightbracket' => array( 0, 145 ),
	),
	141 => array(
		'in' => array( 1, 76 ),
		'leftsquare' => array( 0, 82 ),
	),
	142 => array(
		'rightbracket' => array( 0, 146 ),
		'leftsquare' => array( 0, 82 ),
	),
	143 => array(
		'semicolon' => array( 1, 23 ),
		'rightbracket' => array( 1, 23 ),
		'colon' => array( 1, 23 ),
		'rightsquare' => array( 1, 23 ),
		'comma' => array( 1, 23 ),
		'rightcurly' => array( 1, 23 ),
	),
	144 => array(
		'if' => array( 0, 17 ),
		'for' => array( 0, 18 ),
		'try' => array( 0, 19 ),
		'leftcurly' => array( 0, 16 ),
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	145 => array(
		'if' => array( 0, 17 ),
		'for' => array( 0, 18 ),
		'try' => array( 0, 19 ),
		'leftcurly' => array( 0, 16 ),
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	146 => array(
		'if' => array( 0, 17 ),
		'for' => array( 0, 18 ),
		'try' => array( 0, 19 ),
		'leftcurly' => array( 0, 16 ),
		'return' => array( 0, 20 ),
		'append' => array( 0, 21 ),
		'yield' => array( 0, 22 ),
		'id' => array( 0, 14 ),
		'invert' => array( 0, 24 ),
		'sum' => array( 0, 23 ),
		'self' => array( 0, 30 ),
		'isset' => array( 0, 28 ),
		'delete' => array( 0, 29 ),
		'break' => array( 0, 25 ),
		'continue' => array( 0, 26 ),
		'leftbracket' => array( 0, 15 ),
		'leftsquare' => array( 0, 27 ),
		'string' => array( 0, 31 ),
		'int' => array( 0, 32 ),
		'float' => array( 0, 33 ),
		'true' => array( 0, 34 ),
		'false' => array( 0, 35 ),
		'null' => array( 0, 36 ),
	),
	147 => array(
		'rightcurly' => array( 1, 11 ),
		'if' => array( 1, 11 ),
		'for' => array( 1, 11 ),
		'try' => array( 1, 11 ),
		'leftcurly' => array( 1, 11 ),
		'return' => array( 1, 11 ),
		'append' => array( 1, 11 ),
		'yield' => array( 1, 11 ),
		'id' => array( 1, 11 ),
		'invert' => array( 1, 11 ),
		'sum' => array( 1, 11 ),
		'break' => array( 1, 11 ),
		'continue' => array( 1, 11 ),
		'leftbracket' => array( 1, 11 ),
		'leftsquare' => array( 1, 11 ),
		'self' => array( 1, 11 ),
		'isset' => array( 1, 11 ),
		'delete' => array( 1, 11 ),
		'string' => array( 1, 11 ),
		'int' => array( 1, 11 ),
		'float' => array( 1, 11 ),
		'true' => array( 1, 11 ),
		'false' => array( 1, 11 ),
		'null' => array( 1, 11 ),
		'else' => array( 1, 11 ),
		'catch' => array( 1, 11 ),
	),
	148 => array(
		'rightcurly' => array( 1, 12 ),
		'if' => array( 1, 12 ),
		'for' => array( 1, 12 ),
		'try' => array( 1, 12 ),
		'leftcurly' => array( 1, 12 ),
		'return' => array( 1, 12 ),
		'append' => array( 1, 12 ),
		'yield' => array( 1, 12 ),
		'id' => array( 1, 12 ),
		'invert' => array( 1, 12 ),
		'sum' => array( 1, 12 ),
		'break' => array( 1, 12 ),
		'continue' => array( 1, 12 ),
		'leftbracket' => array( 1, 12 ),
		'leftsquare' => array( 1, 12 ),
		'self' => array( 1, 12 ),
		'isset' => array( 1, 12 ),
		'delete' => array( 1, 12 ),
		'string' => array( 1, 12 ),
		'int' => array( 1, 12 ),
		'float' => array( 1, 12 ),
		'true' => array( 1, 12 ),
		'false' => array( 1, 12 ),
		'null' => array( 1, 12 ),
		'else' => array( 1, 12 ),
		'catch' => array( 1, 12 ),
	),
	149 => array(
		'rightcurly' => array( 1, 13 ),
		'if' => array( 1, 13 ),
		'for' => array( 1, 13 ),
		'try' => array( 1, 13 ),
		'leftcurly' => array( 1, 13 ),
		'return' => array( 1, 13 ),
		'append' => array( 1, 13 ),
		'yield' => array( 1, 13 ),
		'id' => array( 1, 13 ),
		'invert' => array( 1, 13 ),
		'sum' => array( 1, 13 ),
		'break' => array( 1, 13 ),
		'continue' => array( 1, 13 ),
		'leftbracket' => array( 1, 13 ),
		'leftsquare' => array( 1, 13 ),
		'self' => array( 1, 13 ),
		'isset' => array( 1, 13 ),
		'delete' => array( 1, 13 ),
		'string' => array( 1, 13 ),
		'int' => array( 1, 13 ),
		'float' => array( 1, 13 ),
		'true' => array( 1, 13 ),
		'false' => array( 1, 13 ),
		'null' => array( 1, 13 ),
		'else' => array( 1, 13 ),
		'catch' => array( 1, 13 ),
	),
);

static $goto = array(
	0 => array( 1 => 2, 2 => 3 ),
	1 => array(),
	2 => array(),
	3 => array( 1 => 5, 2 => 3 ),
	4 => array(),
	5 => array(),
	6 => array( 3 => 9 ),
	7 => array(),
	8 => array(),
	9 => array(),
	10 => array( 3 => 13 ),
	11 => array( 4 => 37, 5 => 38, 6 => 39, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	12 => array(),
	13 => array(),
	14 => array(),
	15 => array( 6 => 60, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	16 => array( 4 => 61, 27 => 63, 5 => 38, 28 => 64, 6 => 62, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	17 => array(),
	18 => array(),
	19 => array( 5 => 67, 6 => 39, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	20 => array( 10 => 68, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	21 => array( 10 => 69, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	22 => array( 10 => 70, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	23 => array( 21 => 73, 22 => 54, 24 => 55, 25 => 56, 8 => 72, 26 => 57 ),
	24 => array( 19 => 74, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 8 => 72, 26 => 57 ),
	25 => array(),
	26 => array(),
	27 => array( 23 => 76, 6 => 75, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	28 => array(),
	29 => array(),
	30 => array(),
	31 => array(),
	32 => array(),
	33 => array(),
	34 => array(),
	35 => array(),
	36 => array(),
	37 => array( 5 => 79, 6 => 39, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	38 => array(),
	39 => array(),
	40 => array( 29 => 83 ),
	41 => array(),
	42 => array(),
	43 => array(),
	44 => array(),
	45 => array(),
	46 => array(),
	47 => array(),
	48 => array(),
	49 => array(),
	50 => array(),
	51 => array(),
	52 => array(),
	53 => array(),
	54 => array(),
	55 => array(),
	56 => array(),
	57 => array(),
	58 => array( 4 => 96, 5 => 38, 6 => 39, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	59 => array( 27 => 63, 28 => 64, 6 => 97, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	60 => array(),
	61 => array( 5 => 79, 6 => 39, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	62 => array(),
	63 => array(),
	64 => array(),
	65 => array( 6 => 103, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	66 => array( 7 => 105, 8 => 106 ),
	67 => array(),
	68 => array(),
	69 => array(),
	70 => array(),
	71 => array(),
	72 => array( 29 => 83 ),
	73 => array(),
	74 => array(),
	75 => array(),
	76 => array(),
	77 => array(),
	78 => array(),
	79 => array(),
	80 => array(),
	81 => array( 10 => 111, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	82 => array( 6 => 113, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	83 => array(),
	84 => array( 11 => 114, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 8 => 72, 26 => 57 ),
	85 => array( 13 => 115, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 8 => 72, 26 => 57 ),
	86 => array( 14 => 116, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 8 => 72, 26 => 57 ),
	87 => array( 15 => 117, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 8 => 72, 26 => 57 ),
	88 => array( 16 => 118, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 8 => 72, 26 => 57 ),
	89 => array( 17 => 119, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 8 => 72, 26 => 57 ),
	90 => array( 17 => 120, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 8 => 72, 26 => 57 ),
	91 => array( 20 => 121, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 8 => 72, 26 => 57 ),
	92 => array( 20 => 122, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 8 => 72, 26 => 57 ),
	93 => array( 23 => 124, 6 => 75, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	94 => array( 8 => 125 ),
	95 => array(),
	96 => array( 5 => 79, 6 => 39, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	97 => array(),
	98 => array(),
	99 => array(),
	100 => array( 6 => 128, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	101 => array(),
	102 => array( 28 => 129, 6 => 97, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	103 => array(),
	104 => array(),
	105 => array(),
	106 => array( 29 => 83 ),
	107 => array(),
	108 => array( 6 => 134, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	109 => array(),
	110 => array(),
	111 => array(),
	112 => array(),
	113 => array(),
	114 => array(),
	115 => array(),
	116 => array(),
	117 => array(),
	118 => array(),
	119 => array(),
	120 => array(),
	121 => array(),
	122 => array(),
	123 => array(),
	124 => array(),
	125 => array( 29 => 83 ),
	126 => array(),
	127 => array(),
	128 => array(),
	129 => array(),
	130 => array( 5 => 139, 6 => 39, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	131 => array( 6 => 140, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	132 => array( 8 => 141 ),
	133 => array( 8 => 142 ),
	134 => array(),
	135 => array(),
	136 => array( 11 => 143, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 8 => 72, 26 => 57 ),
	137 => array(),
	138 => array(),
	139 => array(),
	140 => array(),
	141 => array( 29 => 83 ),
	142 => array( 29 => 83 ),
	143 => array(),
	144 => array( 5 => 147, 6 => 39, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	145 => array( 5 => 148, 6 => 39, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	146 => array( 5 => 149, 6 => 39, 9 => 41, 10 => 42, 8 => 40, 11 => 43, 12 => 44, 13 => 45, 14 => 46, 15 => 47, 16 => 48, 17 => 49, 18 => 50, 19 => 51, 20 => 52, 21 => 53, 22 => 54, 24 => 55, 25 => 56, 26 => 57 ),
	147 => array(),
	148 => array(),
	149 => array(),
);

}
