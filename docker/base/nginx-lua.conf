worker_processes  1;

error_log  /dev/stdout warn;
pid        /var/run/nginx/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;

    client_max_body_size 0; # disable checking of client request body size

    default_type  application/octet-stream;
    keepalive_requests 10000;

    # prometheus metrics
    lua_shared_dict prometheus_metrics 10M;
    lua_package_path "/usr/local/openresty/site/lualib/?.lua;/usr/local/openresty/site/wikia/?.lua;;";
    init_by_lua_block {
      prometheus = require("prometheus").init("prometheus_metrics")
      metric_requests = prometheus:counter("nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
      metric_latency = prometheus:histogram("nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
      metric_response_sizes = prometheus:histogram("nginx_http_response_size_bytes", "Response sizes in bytes", {"host"})
      metric_connections = prometheus:gauge("nginx_http_connections", "Number of HTTP connections", {"state"})
    }
    log_by_lua_block {
      metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
      metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
      metric_response_sizes:observe(tonumber(ngx.var.bytes_sent), {ngx.var.server_name})
    }

    # SUS-6160 | fpm settings
    # @see http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html
    fastcgi_connect_timeout 3s;
    fastcgi_send_timeout 10s;
    fastcgi_next_upstream off; # do not retry failed requests, CDN handles that for us
    fastcgi_buffer_size 16k;
    fastcgi_buffers 32 16k;
    fastcgi_busy_buffers_size 32k;

    log_format json_combined escape=json '{ "appname": "mediawiki-nginx-access-logs", '
      '"time_local": "$time_local", '
      '"remote_addr": "$http_fastly_client_ip", '
      '"remote_user": "$remote_user", '
      '"method": "$request_method", '
      '"request": "$request_uri", '
      '"status": $status, '
      '"body_bytes_sent": $body_bytes_sent, '
      '"request_time": $request_time, '
      '"http_host": "$http_x_original_host", '
      '"http_referrer": "$http_referer", '
      '"http_user_agent": "$http_user_agent" }';

    access_log  /dev/stdout json_combined;

    sendfile        on;

    keepalive_timeout  10;

    include /etc/nginx/conf.d/*.conf;
}
