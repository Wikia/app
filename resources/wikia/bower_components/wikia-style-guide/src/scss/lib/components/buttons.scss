// Wikia Style Guide
// http://wikia.github.io/style-guide/
// Originally based on a fork Zurb Foundation 5 (http://foundation.zurb.com/)
// Licensed under MIT Open Source

@import "global";

//
// @MIXIN
//
// We use this mixin to create a default button base.
//
// $style - Sets base styles. Can be set to false. Default: true.
// $display - Used to control display property. Default: $button-display || inline-block

@mixin button-base($style:true, $display:$button-display) {
  @if $style {
    border-style: $button-border-style;
    border-width: $button-border-width;
    cursor: $cursor-pointer-value;
    font-family: $button-font-family;
    font-size: $button-font-sml;
    font-weight: $button-font-weight;
    line-height: normal;
    margin: 0 0 $button-margin-bottom;
    padding: 0 rem-calc(25);
    position: relative;
    text-decoration: none;
    text-align: $button-font-align;
    text-transform: uppercase;
    -webkit-appearance: none;
    -webkit-border-radius:0;
  }
  @if $display { display: $display; }
}

// @MIXIN
//
// We use this mixin to add button size styles
//
// $padding - Used to build padding for buttons Default: $button-med ||= rem-calc(12)
// $full-width - We can set $full-width:true to remove side padding extend width - Default: false

@mixin button-size($size:$button-med, $full-width:false) {

  // We control which padding styles come through,
  // these can be turned off by setting $padding:false
  @if $size {
    height: $size;
    line-height: $size;
  }

  // We can set $full-width:true to remove side padding extend width.
  @if $full-width {
    // We still need to check if $padding is set.
    @if $size {
      height: $size;
    } @else if $size == false {
      height: auto;
    }
    padding: 0;
    width: 100%;
  }
}

// @MIXIN
//
// we use this mixin to create the button hover and border colors

// @MIXIN
//
// We use this mixin to add button color styles
//
// $bg - Primary color set in settings file. Default: $button-bg.
// $radius - If true, set to button radius which is $global-radius || explicitly set radius amount in px (ex. $radius:10px). Default: true
// $disabled - We can set $disabled:true to create a disabled transparent button. Default: false
// $bg-hover - Button Hover Background Color. Default: $button-bg-hover
// $border-color - Button Border Color. Default: $button-border-color
@mixin button-style($bg:$button-bg-color, $radius:false, $disabled:false, $bg-hover:$button-bg-hover, $border-color:null) {

  // We control which background styles are used,
  // these can be removed by setting $bg:false
  @if $bg {

    @if $border-color == null {
      $border-color: if($bg == $button-bg-color, $button-border-color, scale-color($bg, $lightness: $button-function-factor));
    }

    // This find the lightness percentage of the background color.
    $bg-lightness: lightness($bg);

    background-color: $bg;
    border-color: $border-color;
    @if $bg-hover {
      $bg-hover-lightness: lightness($bg-hover);

      &:hover,
      &:focus {
        background-color: $bg-hover;
        border-color: $button-bg-hover;
        color: $button-font-color;

        &.secondary {
          color: $button-bg-hover;
        }
      }
    }

    // We control the text color for you based on the background color.
    color: $button-font-color;
  } @else {
    background-color: transparent;
    color: $button-bg-color;
  }

  // We can set $disabled:true to create a disabled transparent button.
  @if $disabled {
    color: $color-gray-light;
    cursor: $button-disabled-cursor;
    opacity: $button-disabled-opacity;
    box-shadow: none;

    &.secondary {
      border-color: $button-bg-hover;
      color: $button-bg-hover;
    }
  }

  // We can control how much button radius is used.
  @if $radius == true { @include radius($button-radius); }
  @else if $radius { @include radius($radius); }

}

// @MIXIN
//
// We use this to quickly create buttons with a single mixin. As @jaredhardy puts it, "the kitchen sink mixin"
//
// $padding - Used to build padding for buttons Default: $button-med ||= rem-calc(12)
// $bg - Primary color set in settings file. Default: $button-bg.
// $radius - If true, set to button radius which is $global-radius || explicitly set radius amount in px (ex. $radius:10px). Default:false.
// $full-width - We can set $full-width:true to remove side padding extend width. Default:false.
// $disabled - We can set $disabled:true to create a disabled transparent button. Default:false.
// $is-prefix - Not used? Default:false.
// $bg-hover - Button Hover Color - Default null - see button-style mixin
// $border-color - Button Border Color - Default null - see button-style mixin
// $transition - We can control whether or not to include the background-color transition property - Default:true.
@mixin button($size:$button-med, $bg:$button-bg-color, $radius:false, $full-width:false, $disabled:false, $is-prefix:false, $bg-hover:null, $border-color:null, $transition: true) {
  @include button-base;
  @include button-size($size, $full-width);
  @include button-style($bg, $radius, $disabled, $bg-hover, $border-color);

  @if $transition {
    @include single-transition(background-color);
  }
}


@include exports("button") {
  @if $include-html-button-classes {

    // Default styles applied outside of media query
    button, .button, input[type="submit"] {
      @include button-base;
      @include button-size;
      @include button-style;

      @include single-transition(background-color);

      &.secondary { @include button-style($bg:null, $bg-hover:$color-white, $border-color:$button-border-color); }
      &.success   { @include button-style($bg:$success-color, $bg-hover:$success-button-bg-hover, $border-color:$success-button-border-color); }
      &.alert     { @include button-style($bg:$alert-color, $bg-hover:$alert-button-bg-hover, $border-color:$alert-button-border-color); }
      &.warning   { @include button-style($bg:$warning-color, $bg-hover:$warning-button-bg-hover, $border-color:$warning-button-border-color); }
      &.info      { @include button-style($bg:$info-color, $bg-hover:$info-button-bg-hover, $border-color:$info-button-border-color); }

      &.large  { @include button-size($size:$button-lrg); }
      &.small  { @include button-size($size:$button-sml); }
      &.expand { @include button-size($size:null,$full-width:true); }

      &.left-align  { text-align: left; text-indent: rem-calc(12); }
      &.right-align { text-align: right; padding-right: rem-calc(12); }

      &.radius { @include button-style($bg:false, $radius:true); }
      &.round  { @include button-style($bg:false, $radius:$button-round); }

      &.disabled, &[disabled] { @include button-style($bg:$color-blue-gray-dark, $disabled:true, $bg-hover:null, $border-color:$color-blue-gray-dark);
        &.secondary { @include button-style($bg:null, $disabled:true, $bg-hover:null, $border-color:$color-blue-gray-dark); }
        &.success { @include button-style($bg:$success-color, $disabled:true, $bg-hover:$success-button-bg-hover, $border-color:$success-button-border-color); }
        &.alert { @include button-style($bg:$alert-color, $disabled:true, $bg-hover:$alert-button-bg-hover, $border-color:$alert-button-border-color); }
        &.warning { @include button-style($bg:$warning-color, $disabled:true, $bg-hover:$warning-button-bg-hover, $border-color:$warning-button-border-color); }
        &.info { @include button-style($bg:$info-color, $disabled:true, $bg-hover:$info-button-bg-hover, $border-color:$info-button-border-color); }
      }
    }

    //firefox 2px fix
    button::-moz-focus-inner {border:0; padding:0;}

    @media #{$medium-up} {
      button, .button, input[type="submit"] {
        @include button-base($style:false, $display:inline-block);
        @include button-size($size:false, $full-width:false);
      }
    }
  }
}

.icon-btn {
  cursor: pointer;
}
