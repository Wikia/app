@import "color";
@import "layout";
@import "responsive-font-sizing";
@import "../mixins/box-sizing";

// Layout
$width-adskin: 170px;
$width-adskins: $width-adskin * 2;
$width-gradient: 40px;
$width-outside-half: $width-outside / 2;
$width-outside-min: 768px;
$width-outside-max: 1600px;
$width-outside-max-half: $width-outside-max / 2;
$width-padding: $width-gutter / 2;

// Breakpoints
$breakpoint-fluid: $width-outside + $width-adskins;
$breakpoint-max: $width-outside-max + $width-adskins;

// Background
// TODO: we might want to consider pre-calculating all of the background
// positioning stuff in PHP and then passing it in here, it would be much
// more performant. However, before we do that, we should come up with a
// better way of passing parameters into Sass (like using a hash), otherwise
// the URLs generated for Sass files will be even more ridiculously long.
$background-height: get_command_line_param( "background-image-height", 0 );
$background-width: get_command_line_param( "background-image-width", 0 );
$background-width-half: $background-width / 2;
$background-position: if( $background-fixed, fixed, absolute );
$background-is-dynamic: if( not $background-tiled and $background-height > 0 and $background-width > $width-outside, true, false );
$background-is-wide: if( $background-width > $breakpoint-fluid, true, false );

// This mixin positions the background images and gradients while the skin is
// in fluid width mode. Positioning is based on the left and right edges of
// the viewport.
@mixin background-fluid() {
	$background-offset-left: 0;
	$background-offset-right: 0;
	$background-position-after: -$background-width-half;
	$background-position-before: 0;
	$background-width-both: $background-width-half;
	$gradient-offset: 0;

	@if ( $background-is-wide ) {
		$background-offset: ( $width-outside - ( $background-width-half - $width-adskin ) * 2 ) / 2;
		$background-width-both: $background-width-half + $background-offset;
		$background-position-before: $background-offset;
		$gradient-offset: $background-width-both - $width-gradient;

	} @else {
		$background-offset: ( $breakpoint-fluid - $background-width ) / 2;
		$background-offset-left: $background-offset;
		$background-offset-right: $background-offset;
		$gradient-offset: ( $background-width-both + $background-offset ) - $width-gradient;
	}

	body {
		&:after,
		&:before {
			width: $background-width-both;
		}

		&:after {
			background-position: $background-position-after 0;
			margin-right: 0;
			right: $background-offset-right;
		}

		&:before {
			background-position: $background-position-before 0;
			margin-left: 0;
			left: $background-offset-left;
		}
	}

	.background-image-gradient {
		&:after,
		&:before {
			content: "";
			height: 100%;
			position: fixed;
			top: 0;
			width: $width-gradient;
			z-index: -1;
		}

		&:after {
			// TODO: replace this with a proper linear-gradient mixin
			background-color: rgba( $color-body, 0 );
			background-image: -webkit-linear-gradient(right, rgba( $color-body, 0 ) 0%, $color-body 100%);
			background-image: linear-gradient(to left, rgba( $color-body, 0 ) 0%, $color-body 100%);
			right: $gradient-offset;
		}

		&:before {
			// TODO: replace this with a proper linear-gradient mixin
			background-color: rgba( $color-body, 0 );
			background-image: -webkit-linear-gradient(left, rgba( $color-body, 0 ) 0%, $color-body 100%);
			background-image: linear-gradient(to right, rgba( $color-body, 0 ) 0%, $color-body 100%);
			left: $gradient-offset;
		}
	}
}

// This mixin positions the background images and gradients once the max width
// has been hit and the skin goes back into static mode. Positioning is done
// relative to the center of the viewport.
@mixin background-max() {
	$background-margin: $width-outside-half - ( $width-outside-max-half + $background-width-half );
	$background-position-after: -$background-width-half;
	$gradient-offset: $background-margin + ( $background-width-half - $width-gradient );

	body {
		&:after,
		&:before {
			width: $background-width-half;
		}

		&:after {
			background-position: $background-position-after 0;
			right: 50%;
			margin-right: $background-margin;
		}

		&:before {
			background-position: 0;
			left: 50%;
			margin-left: $background-margin;
		}
	}

	.background-image-gradient {
		&:after {
			margin-right: $gradient-offset;
			right: 50%;
		}

		&:before {
			left: 50%;
			margin-left: $gradient-offset;
		}
	}
}

html {
	min-width: $width-outside-min;
	overflow-x: auto;
}

body {
	@if ( $background-is-dynamic ) {
		background: $color-body;
		overflow-x: hidden;

		&:after,
		&:before {
			background-image: url( $background-image ); /* $wgCdnStylePath */
			background-repeat: no-repeat;
			content: "";
			height: $background-height;
			position: $background-position;
			top: 0;
			width: $background-width-half;
			z-index: -2;
		}

		&:after {
			background-position: -$background-width-half 0;
			right: 50%;
			margin-right: -$background-width-half;
		}

		&:before {
			background-position: 0;
			// The extra 0.1% fixes sub-pixel rendering issues in Safari (DAR-1052)
			left: 50.1%;
			margin-left: -$background-width-half;
		}
	}
}

body > .global-notification,
.WikiaHeader .page-width-container,
.WikiaPage {
	max-width: $width-outside-max;
}

.global-notification,
.WikiaHeader .page-width-container {
	@include box-sizing( border-box );
	width: $width-outside;
}

.WikiaArticle,
.WikiaArticleFooter {
	padding: 0;
}

.WikiHeader {
	.navbackground {
		width: 100%;
	}

	.WikiNav {
		right: -4px;
		width: auto;

		.subnav-2 {
			width: auto;
		}
	}
}

.WikiHeaderSearch {
	display: none;
}

.WikiaHeader {
	min-width: 0;
}

.WikiaMainContent {
	margin-right: -( $width-rail + $width-gutter );
	position: static;
	width: 100%;
}

.WikiaMainContentContainer {
	background-color: $color-page;
	margin-right: $width-rail + $width-padding;
	padding: 0 $width-padding;
}

.oasis-one-column {
	.WikiaMainContent {
		margin-right: 0;
		width: 100%
	}

	.WikiaMainContentContainer {
		margin-right: 0;
		position: relative;
	}
}

.WikiaPage #WikiaArticleBottomAd {
	clear: both;
	margin: 0;
}

.WikiaPageHeader,
.wikinav2 .WikiaPageHeader {
	margin: 0 0 $width-padding 0;
	padding-bottom: $width-padding / 2;

	.wikia-menu-button,
	> .comments {
		margin-top: 3px;
	}
}

.WikiaRail {
	overflow: hidden;
	padding: 0 10px 0 0;
}

// START - edit page fixes
.editor .WikiaMainContent {
	float: none;
	width: 100%;
}

.editpage-sourcewidemode.mode-source {
	&.editpage-sourcewidemode-on {
		.EditPageMain {
			margin-right: 0;
			width: 100%;
		}

		.EditPageMainContainer {
			margin-right: 0;
		}
	}

	.editpage-widemode-trigger {
		right: $width-rail;
	}
}

.editpage-visualwidemode {
	.EditPageMain {
		margin-right: 0;
		width: 100%;
	}

	.EditPageMainContainer {
		margin-right: 0;
	}

	.EditPageToolbar {
		padding-right: $width-rail;

		.cke_toolbar_expand > a {
			right: $width-rail + $width-padding;
		}
	}
}

.EditPageMain {
	margin-right: -$width-rail;
	padding: 0;
	width: 100%;
}

.EditPageMainContainer {
	margin-right: $width-rail;
}

.EditPageRail {
	width: $width-rail;
}
// END - edit page fixes

@media screen and (max-width: 1023px) {
	.WikiaArticle {
		min-height: auto;
	}

	.WikiaMainContent {
		float: none;
		margin-right: 0;
	}

	.WikiaMainContentContainer {
		margin-right: 0;
	}

	.WikiaRail {
		float: none;
		padding: 0 10px;
		width: auto;
	}

	.WikiaHeader li.start-a-wiki {
		display: none;
	}

	.WikiHeader {
		min-height: 154px;
		padding-top: 0;

		> nav {
			left: 0;
			top: 85px;
		}

		.buttons {
			top: 87px;
		}
	}

	.WikiNav li.nav-item:first-child {
		margin-left: 10px;
	}

	.WikiHeaderSearch {
		display: block;
		left: 280px;
		position: absolute;
		right: 10px;
		top: 12px;
		width: auto;

		input[type="text"] {
			@include box-sizing( border-box );
			font-size: 15pt;
			height: 40px !important;
			left: 0;
			margin-right: 0;
			position: absolute;
			right: 53px;
			width: auto;
			width: calc(100% - 53px); // <-- CSS3!
		}

		.wikia-button {
			height: 40px !important;
			position: absolute;
			right: 0;
		}
	}

	// TODO: clean up all the wikinav2/oasis-one-column styles...
	.wikinav2.oasis-one-column .WikiaPageHeader {
		padding-right: 0;

		.tally {
			right: 0;
		}
	}

	.WikiaSearchHeader .WikiaSearch,
	.WikiaRail .WikiaSearch,
	.WikiaPageHeader .WikiaSearch {
		display: none;
	}
}

@media screen and (max-width: $width-outside) {
	body {
		background: $color-page;

		&:after,
		&:before {
			display: none;
		}
	}

	.WikiHeader .WikiNav {
		right: 0;

		.navbackground img {
			display: none;
		}
	}

	.global-notification,
	.WikiaHeader .page-width-container {
		width: auto;
	}

	.WikiaPage {
		border: 0;
		width: auto;
	}

	.WikiaPageBackground {
		display: none;
	}

	.WikiaTopAds {
		width: 100%;
	}
}

@media screen and (min-width: $breakpoint-fluid) {
	@if ( $background-is-dynamic ) {
		@include background-fluid;
	}

	body > .global-notification,
	.WikiaHeader .page-width-container,
	.WikiaPage {
		margin: 0 $width-adskin;
		width: auto;
	}
}

@media screen and (min-width: $breakpoint-max) {
	@if ( $background-is-dynamic ) {
		@include background-max;
	}

	body > .global-notification,
	.WikiaHeader .page-width-container,
	.WikiaPage {
		margin: 0 auto;
	}
}