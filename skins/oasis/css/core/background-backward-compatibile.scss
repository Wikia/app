@import "color";
@import "layout";
@import "responsive-variables";

// Disclaimer: This file contain all fluid background logic that pre-dates using of background classes

// set up background-specific-vars
$background-position-backward-compatible: if( $background-fixed, fixed, absolute );

// Determines whether or not to apply the dynamic background. Only applies if:
// - background is not tiled
// - background image height is greather than zero
// - background image width is wider than the width of the skin (visible in the ad skin margins)
$background-is-dynamic-backward-compatible: if( not $background-tiled and $background-height > 0 and $background-width > $width-outside, true, false );

// The background image is considered to be "wide" if it bleeds off the screen
// at the size of the fluid breakpoint. This is important because it will determine
// how the two slices of background images need to be positioned below.
$background-is-wide-backward-compatible: if( $background-width > $breakpoint-fluid, true, false );

// This mixin positions the background images and gradients while the skin is
// in fluid width mode. Positioning is based on the left and right edges of
// the viewport.
@mixin background-fluid-backward-compatible() {
// This calculates the width from the edge of each background image slice
// to the point where it is visible inside the viewpoint at the time the
// fluid breakpoint is reached. This will be used as an offset to keep
// the image positioned in the same place when the browser is being resized.
	$background-offset: ( $breakpoint-fluid - $background-width ) / 2;
	$background-offset-left: 0;
	$background-offset-right: 0;
	$background-position-after: -$background-width-half;
	$background-position-before: 0;
	$background-width-both: $background-width-half;

// The gradient is positioned on the outer edge of the background image
// slices, overlapping by the width of the gradient itself.
	$gradient-offset: ( $background-width-half + $background-offset ) - $width-gradient;

	@if ( $background-is-wide-backward-compatible ) {
		$background-width-both: $background-width-half + $background-offset;
		$background-position-before: $background-offset;

	} @else {
		$background-offset-left: $background-offset;
		$background-offset-right: $background-offset;
	}

	body.skin-oasis {
		&:after,
		&:before {
			width: $background-width-both;
		}

		&:after {
			background-position: $background-position-after 0;
			margin-right: 0;
			right: $background-offset-right;
		}

		&:before {
			background-position: $background-position-before 0;
			margin-left: 0;
			left: $background-offset-left;
		}

		.background-image-gradient {
			&:after,
			&:before {
				content: "";
				height: 100%;
				position: fixed;
				top: 0;
				width: $width-gradient;
				z-index: -1;
			}

			&:after {
				// TODO: replace this with a proper linear-gradient mixin
				background-color: rgba( $color-body, 0 );
				background-image: -webkit-linear-gradient(right, rgba( $color-body, 0 ) 0%, $color-body 100%);
				background-image: linear-gradient(to left, rgba( $color-body, 0 ) 0%, $color-body 100%);
				right: $gradient-offset;
			}

			&:before {
				// TODO: replace this with a proper linear-gradient mixin
				background-color: rgba( $color-body, 0 );
				background-image: -webkit-linear-gradient(left, rgba( $color-body, 0 ) 0%, $color-body 100%);
				background-image: linear-gradient(to right, rgba( $color-body, 0 ) 0%, $color-body 100%);
				left: $gradient-offset;
			}
		}
	}
}

// This mixin positions the background images and gradients once the max width
// has been hit and the skin goes back into static mode. Positioning is done
// relative to the center of the viewport.
@mixin background-max-backward-compatible() {
// This margin correctly aligns the background image slices from the center
// of the viewport. It's basically the difference between where the image sat
// before the layout became fluid, and where it sits once max width is reached.
	$background-margin: $width-outside-half - ( $width-outside-max-half + $background-width-half );
	$background-position-after: -$background-width-half;

// The gradient is still positioned on the outer edge of the background image
// slices, overlapping by the width of the gradient itself.
	$gradient-offset: $background-margin + ( $background-width-half - $width-gradient );

	body.skin-oasis {
		&:after,
		&:before {
			width: $background-width-half;
		}

		&:after {
			background-position: $background-position-after 0;
			right: 50%;
			margin-right: $background-margin;
		}

		&:before {
			background-position: 0;
			left: 50%;
			margin-left: $background-margin;
		}

		.background-image-gradient {
			&:after {
				margin-right: $gradient-offset;
				right: 50%;
			}

			&:before {
				left: 50%;
				margin-left: $gradient-offset;
			}
		}
	}
}

@if ( $background-classes == false ) {

// standard logic
	body {
		background: $color-body url($background-image) top $background-align repeat; /* $wgCdnStylePath */
	}

	@if ( $background-tiled == false ) {
		body {
			background-repeat: no-repeat;
		}
	}

	@if ( $background-fixed == true ) {
		body {
			background-attachment: fixed;
		}
	}


// responive layout logic
	@if ( $responsive-layout-enabled and $background-is-dynamic-backward-compatible ) {
		body.skin-oasis {
			background: $color-body;
			overflow: hidden;
			position: relative;

			&:after,
			&:before {
				background-image: url( $background-image ); /* $wgCdnStylePath */
				background-repeat: no-repeat;
				content: "";
				height: $background-height;
				position: $background-position-backward-compatible;
				top: 0;
				width: $background-width-half;
				z-index: -2;
			}

			&:after {
				background-position: -$background-width-half 0;
				right: 50%;
				margin-right: -$background-width-half;
			}

			&:before {
				// The extra 0.1% fixes sub-pixel rendering issues in Safari (DAR-1052)
				left: 50.1%;
				margin-left: -$background-width-half;
			}
		}

		@media screen and (max-width: $breakpoint-content) {
			body.skin-oasis {
				&:after,
				&:before {
					display: none;
				}
			}
		}

		@media screen and (min-width: $breakpoint-fluid) {
			@if ( $background-is-dynamic-backward-compatible ) {
				@include background-fluid-backward-compatible;
			}
		}

		@media screen and (min-width: $breakpoint-max) {
			@if ( $background-is-dynamic-backward-compatible ) {
				@include background-max-backward-compatible;
			}
		}
	}
}
