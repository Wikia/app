import Cookies from 'js-cookie';

let metadata;
let events;
let hidden;
let visibilityChange;

const logVisitTime = () => {
	if (!navigator.sendBeacon) return true;

	events.push({
		focusOut: performance.now()
	});

	const data = Object.assign(metadata, {
		events
	});

	const finalUrl = `https://beacon.wikia-services.com/__track/special/pageviewtime/${btoa(encodeURIComponent(JSON.stringify(data)))}`;

	return navigator.sendBeacon(finalUrl, new FormData());
};

const getStartTime = () => {
	const checkVisibility = document[hidden] ? 'focusOut' : 'focusIn';

	const initTime = {};

	initTime[checkVisibility] = performance.now();

	return initTime;
};

const getEventMetadata = () => ({
	siteDomain: window.location.host,
	url: window.location,
	beaconId: Cookies.get('wikia_beacon_id'),
	timestamp: new Date().toISOString(),
	pvUniqueId: window.pvUID || null,
});

const initPageview = () => {
	events = [getStartTime()];
	metadata = getEventMetadata();
};

const finishPageview = () => {
	logVisitTime();
};

const setupPageTime = (shouldInitPageview) => {
    if (typeof document.hidden !== "undefined") {
        hidden = "hidden";
        visibilityChange = "visibilitychange";
    } else if (typeof document.msHidden !== "undefined") {
        hidden = "msHidden";
        visibilityChange = "msvisibilitychange";
    } else if (typeof document.webkitHidden !== "undefined") {
        hidden = "webkitHidden";
        visibilityChange = "webkitvisibilitychange";
    }

    const handleVisibilityChange = () => {
        if (document[hidden]) {
            events.push({
                focusOut: performance.now(),
            });
        } else {
            events.push({
                focusIn: performance.now(),
            });
        }
    };

    document.addEventListener(visibilityChange, handleVisibilityChange);
    window.addEventListener('beforeunload', logVisitTime);

    initPageview();
};

export default setupPageTime;
export {initPageview, finishPageview};
